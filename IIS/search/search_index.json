{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido \ud83d\udc4b","text":"<p>DOCS</p> <p>Documentaci\u00f3n --&gt; PadelMatch.</p>"},{"location":"#bienvenido-a-autopadels-rest-api","title":"Bienvenido a AutoPadel's REST API","text":"<p>\u00a1Estamos contentos de tenerte aqu\u00ed! En nuestro centro de desarrolladores encontrar\u00e1 todo lo que necesita para interactuar con nuestra plataforma.</p> <p>Nuestros Endpoints devolver\u00e1n metadata en formato Json. \ud83c\udf89</p> <p>Todas las solicitudes se validan con una clave API. Puedes obtenerlo hablando con nuestro soporte</p> <p>Intentamos mantener la documentaci\u00f3n lo m\u00e1s clara y sencilla posible. Por lo tanto, puede probar nuestros Endpoints con su propia clave API, ver el c\u00f3digo de respuestas directamente, etc.</p> <p>Tip</p> <p>Esto es una anotaci\u00f3n: (1)  puedes desplegarlas y ver su contenido!</p> <ol> <li> I can contain <code>code</code>, formatted     text, images, ... basically anything that can be expressed in Markdown. <pre><code>{\n    \"IdLocalPista\": 1,\n    \"IdClub\": 1,\n    \"CodReserva\": \"00000000001\",\n    \"FechaReserva\": \"20/02/2024\",\n    \"HoraReserva\": \"16:00\",\n}\n</code></pre></li> </ol> <p>\u00bfFaltan puntos finales? Env\u00edanos un mensaje a soporte@padelmatch.com \u270c\ufe0f</p>"},{"location":"en/","title":"WELCOME\ud83d\udc4b","text":"<p>DOCS</p> <p>Documentation in --&gt; APIS.</p>"},{"location":"en/#welcome-to-autopadels-rest-api","title":"Welcome to AutoPadel's REST API","text":"<p>We are glad to have you here! In our developer center you will find everything you need to interact with our platform.</p> <p>Our Endpoints will return metadata in Json format. \ud83c\udf89</p> <p>All requests are validated with an API key. You can get it by talking to our support (Coming soon integration to get Api Key manually).</p> <p>We try to keep the documentation as clear and simple as possible. Therefore, you can test our Endpoints with your own API key, see the response code directly, etc.</p> <p>Tip</p> <p>this is an annotate: (1)  you can open it!</p> <ol> <li> I can contain <code>code</code>, formatted     text, images, ... basically anything that can be expressed in Markdown. <pre><code>{\n    \"Id\": 215208,\n    \"IdLocal\": 55382,\n    \"IdEmpresa\": 1460,\n    \"CodVersion\": \"013900300060001\",\n    \"Codigo\": \"04630\",\n}\n</code></pre></li> </ol> <p>Missing endpoints? Send us a message to soporte@autopadel.com \u270c\ufe0f</p>"},{"location":"es/","title":"Bienvenido \ud83d\udc4b","text":"<p>DOCS</p> <p>Documentaci\u00f3n --&gt; AUTOPADEL.</p>"},{"location":"es/#bienvenido-a-autopadels-rest-api","title":"Bienvenido a AutoPadel's REST API","text":"<p>\u00a1Estamos contentos de tenerte aqu\u00ed! En nuestro centro de desarrolladores encontrar\u00e1 todo lo que necesita para interactuar con nuestra plataforma.</p> <p>Nuestros Endpoints devolver\u00e1n metadata en formato Json. \ud83c\udf89</p> <p>Todas las solicitudes se validan con una clave API. Puedes obtenerlo hablando con nuestro soporte (Proximamente integraci\u00f3n para obtener Api Key manualmente).</p> <p>Intentamos mantener la documentaci\u00f3n lo m\u00e1s clara y sencilla posible. Por lo tanto, puede probar nuestros Endpoints con su propia clave API, ver el c\u00f3digo de respuestas directamente, etc.</p> <p>Tip</p> <p>Esto es una anotaci\u00f3n: (1)  puedes desplegarlas y ver su contenido!</p> <ol> <li> I can contain <code>code</code>, formatted     text, images, ... basically anything that can be expressed in Markdown. <pre><code>{\n    \"Id\": 215208,\n    \"IdLocal\": 55382,\n    \"IdEmpresa\": 1460,\n    \"CodVersion\": \"013900300060001\",\n    \"Codigo\": \"04630\",\n}\n</code></pre></li> </ol> <p>\u00bfFaltan puntos finales? Env\u00edanos un mensaje a soporte@autopadel.com \u270c\ufe0f</p>"},{"location":"es/APIS/APIInterna/","title":"APIInterna","text":"<p>PadelMatch</p> <p>En nuestra aplicacion de PadelMatch podr\u00e1s encontrar pistas disponibles para poder jugar, en el club que desees que implemente nuestro software,  tambi\u00e9n tenemos un sistema interno de puntos por usuario con rankings mundiales, nada m\u00e1s entrar a la aplicaci\u00f3n podr\u00e1s ver un login para usuarios con opci\u00f3n para registrarse.</p> <p>Casos de uso</p> <p>1 - Crear Pista: con este m\u00e9todo podr\u00e1s crear todas las pistas de tu club, este m\u00e9todo recibir\u00e1 por Header el Apikey y por Body en forma de JSON pasaremos PistaTipo enum, PistaUbi enum, PistaVisual enum.</p> <p>2 - Crear UsuarioRol: con este m\u00e9todo podr\u00e1s crear usuarios con diferentes roles para acceder a diferentes niveles del software. Los par\u00e1metros de este m\u00e9todo son: Header Username, Header Password, Header Rol el cual ser\u00e1 uno de los enums...</p> <p>3 - Reservar Hora: con este m\u00e9todo podr\u00e1s reservar para jugar una partida con los filtros que decidas.</p> <p>4 - MoreXPBonus: este m\u00e9todo aumentar\u00e1 la experiencia obtenida despues de una partida al jugador que el club considere que lo ha hecho mejor.</p> <p>5 - CreateReservasNextMonth: Con este m\u00e9todo crearemos las posibles horas para</p> <p>Usuarios Roles</p> <p>Asigna los roles con cuidado ya que un admin podr\u00e1 borrar pistas eliminar otros usuarios de menor Rol...</p> <p>RESPUESTAS API PADELMATCH</p> <p>Gen\u00e9ricos:</p> <ul> <li> <p>200 (OK)</p> </li> <li> <p>400 (BadRequest + Mensaje de error)</p> </li> <li> <p>500 (Error interno de la API - Mensaje de excepci\u00f3n)</p> </li> </ul>"},{"location":"es/APIS/APIInterna/#enums","title":"Enums:","text":"<p>Enum UserRol --&gt; (1) &lt;--</p> <p>Enum PistaTipo --&gt; (2) &lt;--</p> <p>Enum PistaUbi --&gt; (3) &lt;--</p> <p>Enum PistaVisual --&gt; (4) &lt;--</p> <ol> <li> <p> UserRol<pre><code>{\n  \"Invitado\": 0,\n  \"Registrado\": 1,\n  \"Moderador\": 2,\n  \"Admin\": 3,\n}\n</code></pre></p> </li> <li> <p> PistaTipo<pre><code>{\n  \"Simples\": 0,\n  \"Dobles\": 1\n}\n</code></pre></p> </li> <li> <p> PistaUbi<pre><code>{\n  \"Exterior\": 0,\n  \"Exterior Cubierta\": 1,\n  \"Interior\": 2\n}\n</code></pre></p> </li> <li> <p> PistaVisual<pre><code>{\n  \"Panoramica\": 0,\n  \"Antigua\": 1\n}\n</code></pre></p> </li> </ol>"},{"location":"es/APIS/APIInterna/#clases-padelmatch","title":"Clases PadelMatch","text":"Pista<pre><code>public class Pista {\n    public int IdClub { get; set; }\n    public int RefLocal { get; set; }\n    public int CantidadJugadores { get; set; }\n    public PistaTipo Tipo { get; set; } // Enumeraci\u00f3n PistaTipo para el tipo de pista\n    public PistaUbi Ubicacion { get; set; } // Enumeraci\u00f3n PistaUbi para la ubicaci\u00f3n de la pista\n    public int Reserva { get; set; }\n    public string Material { get; set; }\n    public string[] UrlsImgs { get; set; } // Array de strings para las URLs de las im\u00e1genes\n    public DateTime FechaMod { get; set; }\n}\n</code></pre> Reserva<pre><code>public class Reserva {\n    public int idreserva { get; set; }\n    public int idusuarioprincipal { get; set; }\n    public int idpista { get; set; }\n    public DateTime horainicio { get; set; }\n    public DateTime horafin { get; set; }\n    public int codigoinvitacion { get; set; }\n    public boolean permitecancelacion { get; set; }\n    public int idusuario2 { get; set; }\n    public int idusuario3 { get; set; }\n    public int idusuario4 { get; set; }\n    public int idclub { get; set; }\n}\n</code></pre> <p>Warning</p> <p>Se permitir\u00e1 la cancelaci\u00f3n de una una reserva hasta 2horas antes de la partida que se pondr\u00e1  y ya no se podr\u00e1n anular reservas y el importe pagado no se devolver\u00e1</p> Usuario<pre><code>public class Usuario {\n    public int idusuario { get; set; }\n    public string usuario { get; set; }\n    public string mail { get; set; }\n    public string contrase\u00f1a { get; set; }\n    public int nivel { get; set; }\n    public string foto { get; set; }\n    public int victorias { get; set; }\n    public int derrotas { get; set; }\n}\n</code></pre> Club<pre><code>public class Club {\n    public int idclub { get; set; }\n    public string nombreclub { get; set; }\n    public int cantidadpistas { get; set; }\n    public string descripci\u00f3n { get; set; }\n    public string idpistas { get; set; }\n    public int idusuariocreador { get; set; }\n    public datetime fechain { get; set; }\n}\n</code></pre>"},{"location":"es/APIS/APIInterna/#reservas","title":"Reservas","text":"<p>Info</p> <p>ID_Reserva: Un identificador \u00fanico para cada reserva (clave primaria).   ID_Usuario_Principal: El identificador del usuario que realiza la reserva.   ID_Recurso: El identificador del recurso que se reserva.   Fecha: La fecha en la que se realiza la reserva.   Hora_Inicio y Hora_Fin: Los momentos de inicio y fin de la reserva.   Estado: El estado de la reserva (confirmada, pendiente, cancelada, etc.).   Codigo_Invitacion: Un c\u00f3digo de invitaci\u00f3n \u00fanico para la reserva que los usuarios pueden usar para unirse a la reserva.   Permite_Cancelacion: Un indicador que permite al usuario principal cancelar la reserva.   ID_Usuarios_Apuntados: Una lista de identificadores de usuarios apuntados a la reserva.   IdClub: club al cual pertenece la reserva</p>"},{"location":"es/APIS/APIInventario/","title":"APIInventario","text":"<p>Descripci\u00f3n ApiInventario</p> <p>Las capacidades de la Api de Almac\u00e9n abarcan una variedad de funciones, las cuales incluyen la recuperaci\u00f3n de cambios en el canal, la recuperaci\u00f3n de cambios en el canal para una empresa espec\u00edfica, la recuperaci\u00f3n de cambios en veh\u00edculos para el canal, la recuperaci\u00f3n de cambios en veh\u00edculos para una empresa espec\u00edfica, conteo de piezas, conteo de piezas para una empresa espec\u00edfica, conteo de veh\u00edculos y conteo de veh\u00edculos para una empresa espec\u00edfica.</p> <p>Todos estos m\u00e9todos requieren el uso de una API key, la cual ser\u00e1 proporcionada por nuestro soporte, garantizando as\u00ed la seguridad y la autorizaci\u00f3n adecuadas para acceder a estas funciones.</p> <p>Casos de uso</p> <p>1 - Si necesitas recuperar las piezas actualizadas a partir de una fecha con sus correspondientes vehiculos en el canal, podr\u00edas utilizar el m\u00e9todo RecuperarCambiosCanal. Este m\u00e9todo requiere el uso de tu Apikey <code>Header</code>, la fecha <code>Header</code> por la cual deseamos obtener piezas a partir de una fecha, un lastid <code>Header</code> para poder navegar por la paginaci\u00f3n y un offset para recuperar una cantidad la cual su maximo ser\u00eda de 1000. Ejemplo</p> <p>2 - Si deseas obtener piezas actualizadas de una empresa espec\u00edfica, puedes utilizar el m\u00e9todo RecuperarCambiosCanalEmpresa. Este m\u00e9todo es ex\u00e1ctamente igual al anterior y necesita los mismos par\u00e1metros solo que si le pasamos el par\u00e1metro opcional <code>idempresa</code> nos devolver\u00e1 solo piezas y vehiculos de una empresa.</p> <p>3 - Para obtener los cambios en veh\u00edculos para el canal, puedes usar el m\u00e9todo RecuperarCambiosVehiculosCanal, pasando tu Apikey por <code>Header</code> , la fecha <code>Header</code>, el lastid que en un principio debe ser 0 y posteriormente utilizar los siguientes lastid para recorrer la paginaci\u00f3n y un offset que como m\u00e1ximo ser\u00e1 1000. Ejemplo</p> <p>4 - Si necesitas recuperar los \u00faltimos veh\u00edculos actualizados para una empresa espec\u00edfica, puedes utilizar el m\u00e9todo RecuperarCambiosVehiculosCanalEmpresa. Este m\u00e9todo requerir\u00e1 tu Apikey por <code>Header</code> , la fecha <code>Header</code>, el lastid que en un principio debe ser 0 y posteriormente utilizar los siguientes lastid para recorrer la paginaci\u00f3n, un offset que como m\u00e1ximo ser\u00e1 1000 y un \u00faltimo par\u00e1metro opcional idempresa tambien por <code>Header</code>.</p> <p>5 - Si deseas contar las piezas en el almac\u00e9n, puedes utilizar el m\u00e9todo ConteoPiezas, pasando tu Apikey por <code>Header</code> y una fecha a partir de la cual te gustaria saber cuantas piezas se han introducido o actualizado.</p> <p>6 - Para realizar un conteo de piezas espec\u00edficas para una empresa, puedes usar el m\u00e9todo ConteoPiezasEmpresa, pasando tu Apikey <code>Header</code>, una fecha a partir de la cual te gustaria saber cuantas piezas se han introducido o actualizado y el idempresa como <code>Header</code>.</p> <p>7 -  Si necesitas contar los veh\u00edculos, puedes utilizar el m\u00e9todo ConteoVehiculos, pasando tu Apikey por <code>Header</code> y una fecha a partir de la cual obtendr\u00e1s vechiculos actualizados o vehiculos nuevos.</p> <p>8 - Para realizar un conteo de veh\u00edculos espec\u00edficos para una empresa, puedes usar el m\u00e9todo ConteoVehiculosEmpresa, pasando tu Apikey por <code>Header</code>, una fecha por <code>Header</code> y tambi\u00e9n el idempresa <code>Header</code>.</p> <p>Api almacen advertencia de algo?</p> <p>Api almacen advertencia de algo?</p> <p>Api almacen advertencia de algo?</p> <p>Api almacen advertencia de algo?</p> <p>RESPUESTAS API ALMACEN</p> <p>Gen\u00e9ricos:</p> <ul> <li> <p>200 (OK)</p> </li> <li> <p>400 (BadRequest + Mensaje de error)</p> </li> <li> <p>500 (Error interno de la API - Mensaje de excepci\u00f3n)</p> </li> <li> <p>503 (Error en el servicio - Mensaje por defecto)</p> </li> </ul>"},{"location":"es/APIS/APIInventario/#enums","title":"Enums:","text":"<p>Enum EstadoVehiculo --&gt; (1) &lt;--</p> <p>Enum Ubicacion --&gt; (2) &lt;--</p> <ol> <li> <p> EstadoVehiculo<pre><code>{\n  \"EnTramite\": 0,\n  \"Revisado\": 1,\n  \"Despiezado\": 2,\n  \"Calculado\": 3,\n  \"EnCampa\": 4,\n  \"Destruido\": 5,\n  \"Procesando\": 6,\n  \"Baja\": 7,\n  \"EnVenta\": 8,\n  \"Sideo\": 9,\n  \"ErrorCalculo\": 10,\n  \"Valorado\": 11,\n  \"Descontaminado\": 12,\n  \"Tasado\": 13,\n  \"ErrorAugias\": 14,\n  \"Otros\": 15\n}\n</code></pre></p> </li> <li> <p> Ubicacion<pre><code>{\n  \"EnProcesoDedesMontaje\": 0,\n  \"Almacenada\": 1,\n  \"ConIncidencia\": 2,\n  \"EnReparto\": 3,\n  \"EnControlDeCalidad\": 4,\n  \"Desechada\": 5,\n  \"EnMostrador\": 6,\n  \"MontadaRevisada\": 7,\n  \"Vendida\": 8,\n  \"SituacionDesconocida\": 9\n}\n</code></pre></p> </li> </ol>"},{"location":"es/APIS/APIInventario/#clases-apiinventario","title":"Clases ApiInventario","text":"<p>Pieza<pre><code>public class PiezaExport {\n    public int IdEmpresa { get; set; }\n    public int RefLocal { get; set; }\n    public int IdVehiculo { get; set; }\n    public string CodFamilia { get; set; } = \"\";\n    public string DescripcionFamilia { get; set; } = \"\";\n    public string CodArticulo { get; set; } = \"\";\n    public string DescripcionArticulo { get; set; } = \"\";\n    public string CodVersion { get; set; } = \"\";\n    public string RefPrincipal { get; set; } = \"\";\n    public int Precio { get; set; }\n    public int AnyoStock { get; set; }\n    //public int Cantidad { get; set; }\n    public int Peso { get; set; }\n    public int Ubicacion { get; set; }\n    public string Observaciones { get; set; } = \"\";\n    public int Reserva { get; set; }\n    public int TipoMaterial { get; set; }\n    public string[] UrlsImgs { get; set; } = new string[0];\n    public DateTime FechaMod { get; set; }\n}\n</code></pre> Vehiculo<pre><code>public class VehiculoExport {\n    public int IdLocal { get; set; }\n        public int IdEmpresa {get; set; }\n        public DateTime FechaMod { get; set; }\n        public string Codigo { get; set; } = \"\";\n        public int[] Estado {get; set; } = new int[0];\n        public string Bastidor { get; set; } = \"\";\n        public string Matricula { get; set; } = \"\";\n        public string Color { get; set; } = \"\";\n        public int Kilometraje {get; set; }\n        public int AnyoVehiculo { get; set; }\n        public string CodigoMotor { get; set; } = \"\";\n        public string CodigoCambio { get; set; } = \"\";\n        public string Observaciones { get; set; } = \"\";\n        public string[] UrlsImgs { get; set; } = new string[0];\n        public string CodMarca { get; set; } = \"\";\n        public string NombreMarca{get; set;} = \"\";\n        public string CodModelo{get; set;} = \"\";\n        public string NombreModelo{get; set;} = \"\";\n        public string CodVersion{get; set;} = \"\";\n        public string NombreVersion{get; set;} = \"\";\n        public string? TipoVersion{get; set;}\n        public string? Combustible{get; set;}\n        public int? Puertas{get; set;}\n        public int? AnyoInicio{get; set;}\n        public int? AnyoFin{get; set;}\n        public string[]? TiposMotor{get; set;}\n        public double? PotenciaHP{get; set;}\n        public double? PotenciaKw{get; set;}\n        public double? Cilindrada{get; set;}\n        public string? Transmision{get; set;}\n        public string? Alimentacion{get; set;}\n        public int? NumMarchas{get; set;}\n\n        public string? RVCode{get; set;}\n\n        public string? Ktype{get; set;}\n}\n</code></pre></p> Paginacion<pre><code>public class Paginacion\n{\n    public int Count { get; set; }\n    public int Total { get; set; }\n    public int Limit { get; set; }\n    public int Offset { get; set; }\n}\n</code></pre> <p>RespuestaRecuperarCambiosCanal<pre><code>public class RespuestaRecuperarCambiosCanal\n{\n    public PiezaExport[] Piezas { get; set; }\n    public VehiculoExport[] Vehiculos { get; set; }\n    public Result_Set result_set { get; set; }\n}\n</code></pre> RespuestaRecuperarCambiosCanalEmpresa<pre><code>public class RespuestaRecuperarCambiosCanalEmpresa\n{\n    public PiezaExport[] Piezas { get; set; }\n    public VehiculoExport[] Vehiculos { get; set; }\n    public Result_Set result_set { get; set; }\n}\n</code></pre> RespuestaRecuperarCambiosVehiculosCanal<pre><code>public class RespuestaRecuperarCambiosVehiculosCanal\n{\n    public List&lt;VehiculoExport&gt;? Vehiculos { get; set; }\n    public Paginacion? result_set { get; set; }\n}\n</code></pre> RespuestaRecuperarCambiosVehiculosCanalEmpresa<pre><code>public class RespuestaRecuperarCambiosVehiculosCanalEmpresa\n{\n    public List&lt;VehiculoExport&gt;? Vehiculos { get; set; }\n    public Paginacion? result_set { get; set; }\n}\n</code></pre></p>"},{"location":"es/APIS/APIInventario/#metodos-apiinventario","title":"Metodos ApiInventario","text":"\u00ba Endpoint Name Endpoint type 1 RecuperarCambiosCanal Get 2 RecuperarCambiosCanalEmpresa Get 3 RecuperarCambiosVehiculosCanal Get 4 RecuperarCambiosVehiculosCanalEmpresa Get 5 ConteoPiezas Get 6 ConteoPiezasEmpresa Get 7 ConteoVehiculos Get 8 ConteoVehiculosEmpresa Get"},{"location":"es/APIS/APIInventario/#recuperarcambioscanal","title":"RecuperarCambiosCanal","text":"<p>Description</p> <p>El m\u00e9todo RecuperarCambiosCanal permite recuperar informaci\u00f3n general sobre el inventario de las empresas.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/RecuperarCambiosCanal</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>{\n    \"piezas\":[\n        \"idEmpresa\": 1460,\n        \"refLocal\": 200647,\n        \"idVehiculo\": 1915379401,\n    ...\n    ],\n    \"vehiculos\":[\n        \"idLocal\": 49595,\n        \"idEmpresa\": 1460,\n        \"fechaMod\": \"2024-01-30T15:42:34\",\n    ...\n    ],\n    \"result_set\": {\n            \"total\": 10695,\n            \"count\": 500,\n            \"offset\": 500,\n            \"lastId\": 1945959\n    }\n}\n</code></pre></li> </ol> <p>Par\u00e1metros de RecuperarCambiosCanal:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (your apikey) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener piezas <code>lastid</code> Header (0) Required int32 Utilizar el LastId devuelto en el Result_Set de la Paginaci\u00f3n para obtener la siguiente tanda de piezas y sus veh\u00edculos <code>offset</code> Header (0) Required int32 Cantidad de piezas que deseamos recuperar con un l\u00edmite m\u00e1ximo de 1000 <p>Fecha superior a fechas piezas</p> <p>Si la fecha de par\u00e1metros es superior a las fechas del inventario obtendr\u00e1s un resultado vac\u00edo parecido a este (1)</p> <ol> <li> Resultado vacio:<pre><code>    {\n        \"piezas\": [],\n        \"vehiculos\": [],\n        \"result_set\": {\n            \"total\": 0,\n            \"count\": 0,\n            \"offset\": 1000,\n            \"lastId\": 0\n        }\n    }\n</code></pre></li> </ol>"},{"location":"es/APIS/APIInventario/#code-exe","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/RecuperarCambiosCanal\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"lastid\", lastid.ToString());\nrequest.AddHeader(\"offset\", offset.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    import org.apache.http.client.methods.CloseableHttpResponse;\n    import org.apache.http.client.methods.HttpPost;\n    import org.apache.http.entity.StringEntity;\n    import org.apache.http.impl.client.CloseableHttpClient;\n    import org.apache.http.impl.client.HttpClients;\n\n    import java.io.IOException;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            String apiKey = \"your_api_key\";\n            String fecha = \"your_date\";\n            String lastid = 0;\n            String offset = 0;\n\n            CloseableHttpClient httpClient = HttpClients.createDefault();\n            HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/RecuperarCambiosCanal\");\n            httpPost.addHeader(\"apiKey\", apiKey);\n            httpPost.addHeader(\"fecha\", fecha);\n            httpPost.addHeader(\"lastid\", lastid);\n            httpPost.addHeader(\"offset\", offset);\n\n            CloseableHttpResponse response = httpClient.execute(httpPost);\n\n            System.out.println(response.getEntity().getContent().toString());\n        }\n    }\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 0\n        offset = 0\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha,\n            'lastid': lastid,\n            'offset': offset\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/RecuperarCambiosCanal', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n        const lastid = 0;\n        const offset = 0;\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/RecuperarCambiosCanal', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha,\n                'lastid': lastid,\n                'offset': offset\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>    require 'uri'\n    require 'net/http'\n\n    def main\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 0\n        offset = 0\n\n        url = URI(\"https://apis.metasync.com/Pedidos/RecuperarCambiosCanal\")\n\n        https = Net::HTTP.new(url.host, url.port)\n        https.use_ssl = true\n\n        request = Net::HTTP::Post.new(url)\n        request[\"apiKey\"] = api_key\n        request[\"fecha\"] = fecha\n        request[\"lastid\"] = lastid\n        request[\"offset\"] = offset\n\n        response = https.request(request)\n        puts response.read_body\n    end\n\n    main()\n</code></pre>"},{"location":"es/APIS/APIInventario/#pieza","title":"Pieza","text":"pieza<pre><code>    {\n        \"idEmpresa\": 1460,\n        \"refLocal\": 200647,\n        \"idVehiculo\": -1915379401,\n        \"codFamilia\": \"009\",\n        \"descripcionFamilia\": \"ELECTRICIDAD\",\n        \"codArticulo\": \"0090060\",\n        \"descripcionArticulo\": \"MOTOR ARRANQUE\",\n        \"codVersion\": \"01130011B000004\",\n        \"refPrincipal\": \"0001314025\",\n        \"precio\": 1640,\n        \"anyoStock\": 0,\n        \"peso\": 500,\n        \"ubicacion\": 1,\n        \"observaciones\": \"\",\n        \"reserva\": 0,\n        \"tipoMaterial\": 0,\n        \"urlsImgs\": [\n            \"https://cdn11.metasync.com/vbcXn_pop8ELJ1ANDMOCfwZjfqpc0gH-vLS5yJoXaIx_n4pL1GdB0w==\",\n            \"https://cdn11.metasync.com/lAC69ruOWNYGkT68b9b8zmO5AzY1I6nZI6VMs6n94ng2FzwBkgtXBQ==\",\n            \"https://cdn11.metasync.com/9wZS0vJrHkXj5b10MpSJnIAX6068ZPmRy1u0D_22quJS-5HKmnBuLA==\",\n            \"https://cdn11.metasync.com/Z2-lEakumfc0WABvJhrVWjYTSt5zMIHFGhrTYHdRJlc3zq3T0RbkgQ==\",\n            \"https://cdn11.metasync.com/JALdfFfGpve-YLG316-cbZj--kP28boBchWMdZ5fqIUuoY2L7ysI9A==\"\n        ],\n        \"fechaMod\": \"2024-01-30T15:42:33\"\n    },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-pieza","title":"Explicaci\u00f3n pieza","text":"Atributo Tipo Descripci\u00f3n <code>idEmpresa</code> int32 Identificador de la empresa. <code>refLocal</code> string Identificador local de la pieza. <code>idVehiculo</code> string Identificador local del veh\u00edculo. <code>codFamilia</code> string C\u00f3digo de la familia de la pieza (ejemplo: \"009\"). <code>descripcionFamilia</code> string Descripci\u00f3n de la familia de la pieza (ejemplo: \"ELECTRICIDAD\"). <code>codArticulo</code> string C\u00f3digo \u00fanico de la pieza (ejemplo: \"0090060\"). <code>descripcionArticulo</code> string Descripci\u00f3n del art\u00edculo o nombre de la pieza (ejemplo: \"MOTOR ARRANQUE\"). <code>codVersion</code> string C\u00f3digo de versi\u00f3n de la pieza (ejemplo: \"01130011B000004\"). <code>refPrincipal</code> string Referencia principal de la pieza (ejemplo: \"0001314025\"). <code>precio</code> number Precio de la pieza (ejemplo: 1640). <code>anyoStock</code> int32 A\u00f1o de stock de la pieza (ejemplo: 0 si no se tiene informaci\u00f3n). <code>peso</code> int32 Peso de la pieza en gramos (ejemplo: 500). <code>ubicacion</code> int32 Ubicaci\u00f3n de la pieza. <code>observaciones</code> string Observaciones adicionales sobre la pieza. <code>reserva</code> int32 Indicador de si la pieza est\u00e1 reservada (ejemplo: 0 para no reservada). <code>tipoMaterial</code> int32 Tipo de material de la pieza (ejemplo: 0). <code>urlsImgs</code> array Lista de URLs de im\u00e1genes representativas de la pieza. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n de la pieza (ejemplo: \"2024-01-30T15:42:33\")."},{"location":"es/APIS/APIInventario/#vehiculo","title":"Veh\u00edculo","text":"vehiculo<pre><code>    {\n      \"idLocal\": 49595,\n      \"idEmpresa\": 1460,\n      \"fechaMod\": \"2024-01-30T15:42:34\",\n      \"codigo\": \"10424\",\n      \"estado\": [\n          15,\n          5\n      ],\n      \"bastidor\": \"WBAAL71070CF45890\",\n      \"matricula\": \"2658-FFD\",\n      \"color\": \"NEGRO\",\n      \"kilometraje\": 0,\n      \"anyoVehiculo\": 2006,\n      \"codigoMotor\": \"M47D20\",\n      \"codigoCambio\": \"\",\n      \"observaciones\": \"\",\n      \"urlsImgs\": [\n                \"https://cdn11.metasync.com/9QcoK6IHNWwkXAisjXlSocco3IZ94WwjUyYihhJLRMNwnPYqi0JEzw==\"\n            ],\n      \"codMarca\": \"01130\",\n      \"nombreMarca\": \"BMW\",\n      \"codModelo\": \"01130046\",\n      \"nombreModelo\": \"SERIE 3 BERLINA (E46)\",\n      \"codVersion\": \"011300460080001\",\n      \"nombreVersion\": \"320d\",\n      \"tipoVersion\": \"BerS\",\n      \"combustible\": \"Diesel\",\n      \"puertas\": null,\n      \"anyoInicio\": 1998,\n      \"anyoFin\": 2001,\n      \"tiposMotor\": [\n          \"M47D20\",\n          \"M47204D1\"\n      ],\n      \"potenciaHP\": 136,\n      \"potenciaKw\": 100,\n      \"cilindrada\": 1951,\n      \"transmision\": \"Caja de cambios 5 velocidades\",\n      \"alimentacion\": \"\",\n      \"numMarchas\": 5,\n      \"rvCode\": \"34242\",\n      \"ktype\": \"15638\"\n  },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-vehiculo","title":"Explicaci\u00f3n veh\u00edculo","text":"Atributo Tipo Descripci\u00f3n <code>idLocal</code> int32 Identificador local del veh\u00edculo. <code>idEmpresa</code> int32 Identificador de la empresa propietaria del veh\u00edculo. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n del veh\u00edculo (ejemplo: \"2024-01-30T15:42:34\"). <code>codigo</code> string C\u00f3digo \u00fanico del veh\u00edculo. <code>estado</code> array(int32) Lista de estados del veh\u00edculo.(EnTramite, Revisado, Despiezado, Calculado, EnCampa, Destruido, Procesando, Baja, EnVenta, Sideo, ErrorCalculo, Valorado, Descontaminado, Tasado, ErrorAugias, Otros) <code>bastidor</code> string N\u00famero de bastidor del veh\u00edculo. <code>matricula</code> string N\u00famero de matr\u00edcula del veh\u00edculo. <code>color</code> string Color del veh\u00edculo. <code>kilometraje</code> int32 Kilometraje actual del veh\u00edculo. <code>anyoVehiculo</code> int32 A\u00f1o de fabricaci\u00f3n del veh\u00edculo. <code>codigoMotor</code> string C\u00f3digo del motor del veh\u00edculo. <code>codigoCambio</code> string C\u00f3digo de cambio del veh\u00edculo. <code>observaciones</code> string Observaciones adicionales sobre el veh\u00edculo. <code>urlsImgs</code> array(strings) Lista de URLs de im\u00e1genes representativas del veh\u00edculo. <code>codMarca</code> string C\u00f3digo de marca del veh\u00edculo. <code>nombreMarca</code> string Nombre de la marca del veh\u00edculo. <code>codModelo</code> string C\u00f3digo del modelo del veh\u00edculo. <code>nombreModelo</code> string Nombre del modelo del veh\u00edculo. <code>codVersion</code> string C\u00f3digo de versi\u00f3n del veh\u00edculo. <code>nombreVersion</code> string Nombre de la versi\u00f3n del veh\u00edculo. <code>tipoVersion</code> string Tipo de versi\u00f3n del veh\u00edculo. <code>combustible</code> string Tipo de combustible del veh\u00edculo. <code>puertas</code> int32 N\u00famero de puertas del veh\u00edculo. <code>anyoInicio</code> int32 A\u00f1o de inicio de producci\u00f3n del veh\u00edculo. <code>anyoFin</code> int32 A\u00f1o de fin de producci\u00f3n del veh\u00edculo. <code>tiposMotor</code> array(string) Lista de tipos de motor del veh\u00edculo. <code>potenciaHP</code> int32 Potencia del motor en caballos de fuerza. <code>potenciaKw</code> int32 Potencia del motor en kilovatios. <code>cilindrada</code> int32 Cilindrada del motor. <code>transmision</code> string Tipo de transmisi\u00f3n del veh\u00edculo. <code>alimentacion</code> string Tipo de alimentaci\u00f3n del veh\u00edculo. <code>numMarchas</code> int32 N\u00famero de marchas de la transmisi\u00f3n del veh\u00edculo. <code>rvCode</code> string C\u00f3digo de versi\u00f3n del cat\u00e1logo de Recambio Verde <code>ktype</code> string Identificador unico que hace referencia a la version de ese vehiculo"},{"location":"es/APIS/APIInventario/#result_set","title":"Result_set","text":"result_set<pre><code>    \"result_set\": {\n        \"total\": 10696,\n        \"count\": 1000,\n        \"offset\": 1000,\n        \"lastId\": 1946873\n    }\n</code></pre> <p>Datos result_set:</p> Atributo Tipo Descripci\u00f3n <code>lastid</code> int32 \u00daltima id de pieza que recibimos para pasar a la siguiente iteraci\u00f3n <code>offset</code> int32 Cantidad de datos que deseamos recuperar max 1000 <code>total</code> int32 Cantidad total de piezas <code>count</code> int32 Cantidad de datos encontrados en esa iteraci\u00f3n max 1000 <p>Info</p> <p>Si el count fuese 0 y estuviesemos recorriendo la paginaci\u00f3n habremos llegado al final del inventario.</p> <p>Si el count fuese &lt; que offset tambi\u00e9n indicaria que estamos en la \u00faltima tanda de la paginaci\u00f3n.</p>"},{"location":"es/APIS/APIInventario/#recuperarcambioscanalempresa","title":"RecuperarCambiosCanalEmpresa","text":"<p>Description</p> <p>El m\u00e9todo {RecuperarCambiosCanalEmpresa} permite recuperar informaci\u00f3n general sobre el inventario de las empresas. Proporciona una visi\u00f3n general de las piezas existentes, veh\u00edculos y el propio resultado de esa consulta.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/RecuperarCambiosCanalEmpresa</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>{\n    \"piezas\":[\n        \"idEmpresa\": 1460,\n        \"refLocal\": 200647,\n        \"idVehiculo\": 1915379401,\n    ...\n    ],\n    \"vehiculos\":[\n        \"idLocal\": 49595,\n        \"idEmpresa\": 1460,\n        \"fechaMod\": \"2024-01-30T15:42:34\",\n    ...\n    ],\n    \"result_set\": {\n            \"total\": 10695,\n            \"count\": 500,\n            \"offset\": 500,\n            \"lastId\": 1945959\n    }\n}\n</code></pre></li> </ol> <p>Par\u00e1metros de RecuperarCambiosCanalEmpresa:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener piezas <code>lastid</code> Header (0) Required int32 Utilizar el LastId devuelto en el Result_Set de la Paginaci\u00f3n para obtener la siguiente tanda de piezas y sus vehiculos <code>offset</code> Header (0) Required int32 Cantidad de piezas que deseamos recuperar con un l\u00edmite m\u00e1ximo de 1000 <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa. <p>Fecha superior a fechas piezas</p> <p>Si la fecha de par\u00e1metros es superior a las fechas del inventario obtendr\u00e1s un resultado vac\u00edo parecido a este (1)</p> <ol> <li> Resultado vacio:<pre><code>    {\n        \"piezas\": [],\n        \"vehiculos\": [],\n        \"result_set\": {\n            \"total\": 0,\n            \"count\": 0,\n            \"offset\": 1000,\n            \"lastId\": 0\n        }\n    }\n</code></pre></li> </ol>"},{"location":"es/APIS/APIInventario/#code-exe_1","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/RecuperarCambiosCanalEmpresa\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"lastid\", lastid.ToString());\nrequest.AddHeader(\"offset\", offset.ToString());\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\n\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\n\nimport java.io.IOException;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String apiKey = \"your_api_key\";\n        String fecha = \"your_date\";\n        String lastid = \"your_last_id\";\n        String offset = \"your_offset\";\n        String idempresa = \"your_company_id\";\n\n        CloseableHttpClient httpClient = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/RecuperarCambiosCanalEmpresa\");\n        httpPost.addHeader(\"apiKey\", apiKey);\n        httpPost.addHeader(\"fecha\", fecha);\n        httpPost.addHeader(\"lastid\", lastid);\n        httpPost.addHeader(\"offset\", offset);\n        httpPost.addHeader(\"idempresa\", idempresa);\n\n        CloseableHttpResponse response = httpClient.execute(httpPost);\n\n        System.out.println(response.getEntity().getContent().toString());\n    }\n}\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 'your_last_id'\n        offset = 'your_offset'\n        idempresa = 'your_company_id'\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha,\n            'lastid': lastid,\n            'offset': offset,\n            'idempresa': idempresa\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/RecuperarCambiosCanalEmpresa', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n        const lastid = 'your_last_id';\n        const offset = 'your_offset';\n        const idempresa = 'your_company_id';\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/RecuperarCambiosCanalEmpresa', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha,\n                'lastid': lastid,\n                'offset': offset,\n                'idempresa': idempresa\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>    require 'uri'\n    require 'net/http'\n\n    def main\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 'your_last_id'\n        offset = 'your_offset'\n        idempresa = 'your_company_id'\n\n        url = URI(\"https://apis.metasync.com/Pedidos/RecuperarCambiosCanalEmpresa\")\n\n        https = Net::HTTP.new(url.host, url.port)\n        https.use_ssl = true\n\n        request = Net::HTTP::Post.new(url)\n        request[\"apiKey\"] = api_key\n        request[\"fecha\"] = fecha\n        request[\"lastid\"] = lastid\n        request[\"offset\"] = offset\n        request[\"idempresa\"] = idempresa\n\n        response = https.request(request)\n        puts response.read_body\n    end\n\n    main()\n</code></pre>"},{"location":"es/APIS/APIInventario/#pieza_1","title":"Pieza","text":"pieza<pre><code>    {\n        \"idEmpresa\": 1460,\n        \"refLocal\": 200647,\n        \"idVehiculo\": -1915379401,\n        \"codFamilia\": \"009\",\n        \"descripcionFamilia\": \"ELECTRICIDAD\",\n        \"codArticulo\": \"0090060\",\n        \"descripcionArticulo\": \"MOTOR ARRANQUE\",\n        \"codVersion\": \"01130011B000004\",\n        \"refPrincipal\": \"0001314025\",\n        \"precio\": 1640,\n        \"anyoStock\": 0,\n        \"peso\": 500,\n        \"ubicacion\": 1,\n        \"observaciones\": \"\",\n        \"reserva\": 0,\n        \"tipoMaterial\": 0,\n        \"urlsImgs\": [\n            \"https://cdn11.metasync.com/vbcXn_pop8ELJ1ANDMOCfwZjfqpc0gH-vLS5yJoXaIx_n4pL1GdB0w==\",\n            \"https://cdn11.metasync.com/lAC69ruOWNYGkT68b9b8zmO5AzY1I6nZI6VMs6n94ng2FzwBkgtXBQ==\",\n            \"https://cdn11.metasync.com/9wZS0vJrHkXj5b10MpSJnIAX6068ZPmRy1u0D_22quJS-5HKmnBuLA==\",\n            \"https://cdn11.metasync.com/Z2-lEakumfc0WABvJhrVWjYTSt5zMIHFGhrTYHdRJlc3zq3T0RbkgQ==\",\n            \"https://cdn11.metasync.com/JALdfFfGpve-YLG316-cbZj--kP28boBchWMdZ5fqIUuoY2L7ysI9A==\"\n        ],\n        \"fechaMod\": \"2024-01-30T15:42:33\"\n    },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-pieza_1","title":"Explicaci\u00f3n pieza","text":"Atributo Tipo Descripci\u00f3n <code>idEmpresa</code> int32 Identificador de la empresa. <code>refLocal</code> string Identificador local de la pieza. <code>idVehiculo</code> string Identificador local del veh\u00edculo. <code>codFamilia</code> string C\u00f3digo de la familia de la pieza (ejemplo: \"009\"). <code>descripcionFamilia</code> string Descripci\u00f3n de la familia de la pieza (ejemplo: \"ELECTRICIDAD\"). <code>codArticulo</code> string C\u00f3digo \u00fanico de la pieza (ejemplo: \"0090060\"). <code>descripcionArticulo</code> string Descripci\u00f3n del art\u00edculo o nombre de la pieza (ejemplo: \"MOTOR ARRANQUE\"). <code>codVersion</code> string C\u00f3digo de versi\u00f3n de la pieza (ejemplo: \"01130011B000004\"). <code>refPrincipal</code> string Referencia principal de la pieza (ejemplo: \"0001314025\"). <code>precio</code> number Precio de la pieza (ejemplo: 1640). <code>anyoStock</code> int32 A\u00f1o de stock de la pieza (ejemplo: 0 si no se tiene informaci\u00f3n). <code>peso</code> int32 Peso de la pieza en gramos (ejemplo: 500). <code>ubicacion</code> int32 Ubicaci\u00f3n de la pieza. <code>observaciones</code> string Observaciones adicionales sobre la pieza. <code>reserva</code> int32 Indicador de si la pieza est\u00e1 reservada (ejemplo: 0 para no reservada). <code>tipoMaterial</code> int32 Tipo de material de la pieza (ejemplo: 0). <code>urlsImgs</code> array Lista de URLs de im\u00e1genes representativas de la pieza. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n de la pieza (ejemplo: \"2024-01-30T15:42:33\")."},{"location":"es/APIS/APIInventario/#vehiculo_1","title":"Vehiculo","text":"vehiculo<pre><code>    {\n      \"idLocal\": 49595,\n      \"idEmpresa\": 1460,\n      \"fechaMod\": \"2024-01-30T15:42:34\",\n      \"codigo\": \"10424\",\n      \"estado\": [\n          15,\n          5\n      ],\n      \"bastidor\": \"WBAAL71070CF45890\",\n      \"matricula\": \"2658-FFD\",\n      \"color\": \"NEGRO\",\n      \"kilometraje\": 0,\n      \"anyoVehiculo\": 2006,\n      \"codigoMotor\": \"M47D20\",\n      \"codigoCambio\": \"\",\n      \"observaciones\": \"\",\n      \"urlsImgs\": [\n                \"https://cdn11.metasync.com/9QcoK6IHNWwkXAisjXlSocco3IZ94WwjUyYihhJLRMNwnPYqi0JEzw==\"\n            ],\n      \"codMarca\": \"01130\",\n      \"nombreMarca\": \"BMW\",\n      \"codModelo\": \"01130046\",\n      \"nombreModelo\": \"SERIE 3 BERLINA (E46)\",\n      \"codVersion\": \"011300460080001\",\n      \"nombreVersion\": \"320d\",\n      \"tipoVersion\": \"BerS\",\n      \"combustible\": \"Diesel\",\n      \"puertas\": null,\n      \"anyoInicio\": 1998,\n      \"anyoFin\": 2001,\n      \"tiposMotor\": [\n          \"M47D20\",\n          \"M47204D1\"\n      ],\n      \"potenciaHP\": 136,\n      \"potenciaKw\": 100,\n      \"cilindrada\": 1951,\n      \"transmision\": \"Caja de cambios 5 velocidades\",\n      \"alimentacion\": \"\",\n      \"numMarchas\": 5,\n      \"rvCode\": \"34242\",\n      \"ktype\": \"15638\"\n  },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-vehiculo_1","title":"Explicaci\u00f3n veh\u00edculo","text":"Atributo Tipo Descripci\u00f3n <code>idLocal</code> int32 Identificador local del veh\u00edculo. <code>idEmpresa</code> int32 Identificador de la empresa propietaria del veh\u00edculo. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n del veh\u00edculo (ejemplo: \"2024-01-30T15:42:34\"). <code>codigo</code> string C\u00f3digo \u00fanico del veh\u00edculo. <code>estado</code> array(int32) Lista de estados del veh\u00edculo.(EnTramite, Revisado, Despiezado, Calculado, EnCampa, Destruido, Procesando, Baja, EnVenta, Sideo, ErrorCalculo, Valorado, Descontaminado, Tasado, ErrorAugias, Otros) <code>bastidor</code> string N\u00famero de bastidor del veh\u00edculo. <code>matricula</code> string N\u00famero de matr\u00edcula del veh\u00edculo. <code>color</code> string Color del veh\u00edculo. <code>kilometraje</code> int32 Kilometraje actual del veh\u00edculo. <code>anyoVehiculo</code> int32 A\u00f1o de fabricaci\u00f3n del veh\u00edculo. <code>codigoMotor</code> string C\u00f3digo del motor del veh\u00edculo. <code>codigoCambio</code> string C\u00f3digo de cambio del veh\u00edculo. <code>observaciones</code> string Observaciones adicionales sobre el veh\u00edculo. <code>urlsImgs</code> array(strings) Lista de URLs de im\u00e1genes representativas del veh\u00edculo. <code>codMarca</code> string C\u00f3digo de marca del veh\u00edculo. <code>nombreMarca</code> string Nombre de la marca del veh\u00edculo. <code>codModelo</code> string C\u00f3digo del modelo del veh\u00edculo. <code>nombreModelo</code> string Nombre del modelo del veh\u00edculo. <code>codVersion</code> string C\u00f3digo de versi\u00f3n del veh\u00edculo. <code>nombreVersion</code> string Nombre de la versi\u00f3n del veh\u00edculo. <code>tipoVersion</code> string Tipo de versi\u00f3n del veh\u00edculo. <code>combustible</code> string Tipo de combustible del veh\u00edculo. <code>puertas</code> int32 N\u00famero de puertas del veh\u00edculo. <code>anyoInicio</code> int32 A\u00f1o de inicio de producci\u00f3n del veh\u00edculo. <code>anyoFin</code> int32 A\u00f1o de fin de producci\u00f3n del veh\u00edculo. <code>tiposMotor</code> array(string) Lista de tipos de motor del veh\u00edculo. <code>potenciaHP</code> int32 Potencia del motor en caballos de fuerza. <code>potenciaKw</code> int32 Potencia del motor en kilovatios. <code>cilindrada</code> int32 Cilindrada del motor. <code>transmision</code> string Tipo de transmisi\u00f3n del veh\u00edculo. <code>alimentacion</code> string Tipo de alimentaci\u00f3n del veh\u00edculo. <code>numMarchas</code> int32 N\u00famero de marchas de la transmisi\u00f3n del veh\u00edculo. <code>rvCode</code> string C\u00f3digo de versi\u00f3n del cat\u00e1logo de Recambio Verde <code>ktype</code> string Identificador unico que hace referencia a la version de ese vehiculo"},{"location":"es/APIS/APIInventario/#result_set_1","title":"Result_set","text":"result_set<pre><code>    \"result_set\": {\n        \"total\": 10696,\n        \"count\": 1000,\n        \"offset\": 1000,\n        \"lastId\": 1946873\n    }\n</code></pre> <p>Datos result_set:</p> Atributo Tipo Descripci\u00f3n <code>lastid</code> int32 \u00daltima id de pieza que recibimos para pasar a la siguiente iteraci\u00f3n <code>offset</code> int32 Cantidad de datos que deseamos recuperar max 1000 <code>total</code> int32 Cantidad total de piezas <code>count</code> int32 Cantidad de datos encontrados en esa iteraci\u00f3n max 1000 <p>Info</p> <p>Si el count fuese 0 y estuviesemos recorriendo la paginaci\u00f3n habremos llegado al final del inventario.</p> <p>Si el count fuese &lt; que offset tambi\u00e9n indicaria que estamos en la \u00faltima tanda de la paginaci\u00f3n.</p>"},{"location":"es/APIS/APIInventario/#recuperarcambiosvehiculoscanal","title":"RecuperarCambiosVehiculosCanal","text":"<p>Description</p> <p>El m\u00e9todo {RecuperarCambiosVehiculosCanal} permite recuperar informaci\u00f3n general sobre vehiculos de empresas.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/RecuperarCambiosVehiculosCanal</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>{\n    \"vehiculos\":[\n        \"idLocal\": 49595,\n        \"idEmpresa\": 1460,\n        \"fechaMod\": \"2024-01-30T15:42:34\",\n    ...\n    ],\n    \"result_set\": {\n            \"total\": 10695,\n            \"count\": 500,\n            \"offset\": 500,\n            \"lastId\": 1945959\n    }\n}\n</code></pre></li> </ol> <p>Par\u00e1metros de RecuperarCambiosVehiculosCanal:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener veh\u00edculos <code>lastid</code> Header (0) Required int32 Utilizar el LastId devuelto en el Result_Set de la Paginaci\u00f3n para obtener la siguiente tanda de piezas y sus veh\u00edculos <code>offset</code> Header (0) Required int32 Cantidad de piezas que deseamos recuperar con un l\u00edmite m\u00e1ximo de 1000 <p>Fecha superior a todos los veh\u00edculos</p> <p>Si la fecha de par\u00e1metros es superior a las fechas de los veh\u00edculos obtendr\u00e1s un resultado vac\u00edo parecido a este (1)</p> <ol> <li> Response null<pre><code>{\n    \"vehiculos\": [],\n    \"result_set\": {\n        \"total\": 0,\n        \"count\": 0,\n        \"offset\": 1000,\n        \"lastId\": 0\n    }\n}\n</code></pre></li> </ol> C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/RecuperarCambiosVehiculosCanal\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"lastid\", lastid);\nrequest.AddHeader(\"offset\", offset);\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    import org.apache.http.client.methods.CloseableHttpResponse;\n    import org.apache.http.client.methods.HttpPost;\n    import org.apache.http.entity.StringEntity;\n    import org.apache.http.impl.client.CloseableHttpClient;\n    import org.apache.http.impl.client.HttpClients;\n\n    import java.io.IOException;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            String apiKey = \"your_api_key\";\n            String fecha = \"your_date\";\n            Integer lastid = 0;\n            Integer offset = 0;\n\n            CloseableHttpClient httpClient = HttpClients.createDefault();\n            HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanal\");\n            httpPost.addHeader(\"apiKey\", apiKey);\n            httpPost.addHeader(\"fecha\", fecha);\n            httpPost.addHeader(\"lastid\", lastid);\n            httpPost.addHeader(\"offset\", offset);\n\n            CloseableHttpResponse response = httpClient.execute(httpPost);\n\n            System.out.println(response.getEntity().getContent().toString());\n        }\n    }\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 'your_last_id'\n        offset = 'your_offset'\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha,\n            'lastid': lastid,\n            'offset': offset\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanal', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n        const lastid = 0;\n        const offset = 0;\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanal', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha,\n                'lastid': lastid,\n                'offset': offset\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>    require 'uri'\n    require 'net/http'\n\n    def main\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 0\n        offset = 0\n\n        url = URI(\"https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanal\")\n\n        https = Net::HTTP.new(url.host, url.port)\n        https.use_ssl = true\n\n        request = Net::HTTP::Post.new(url)\n        request[\"apiKey\"] = api_key\n        request[\"fecha\"] = fecha\n        request[\"lastid\"] = lastid\n        request[\"offset\"] = offset\n\n        response = https.request(request)\n        puts response.read_body\n    end\n\n    main()\n</code></pre>"},{"location":"es/APIS/APIInventario/#vehiculo_2","title":"Veh\u00edculo","text":"vehiculo<pre><code>    {\n      \"idLocal\": 49595,\n      \"idEmpresa\": 1460,\n      \"fechaMod\": \"2024-01-30T15:42:34\",\n      \"codigo\": \"10424\",\n      \"estado\": [\n          15,\n          5\n      ],\n      \"bastidor\": \"WBAAL71070CF45890\",\n      \"matricula\": \"2658-FFD\",\n      \"color\": \"NEGRO\",\n      \"kilometraje\": 0,\n      \"anyoVehiculo\": 2006,\n      \"codigoMotor\": \"M47D20\",\n      \"codigoCambio\": \"\",\n      \"observaciones\": \"\",\n      \"urlsImgs\": [\n                \"https://cdn11.metasync.com/9QcoK6IHNWwkXAisjXlSocco3IZ94WwjUyYihhJLRMNwnPYqi0JEzw==\"\n            ],\n      \"codMarca\": \"01130\",\n      \"nombreMarca\": \"BMW\",\n      \"codModelo\": \"01130046\",\n      \"nombreModelo\": \"SERIE 3 BERLINA (E46)\",\n      \"codVersion\": \"011300460080001\",\n      \"nombreVersion\": \"320d\",\n      \"tipoVersion\": \"BerS\",\n      \"combustible\": \"Diesel\",\n      \"puertas\": null,\n      \"anyoInicio\": 1998,\n      \"anyoFin\": 2001,\n      \"tiposMotor\": [\n          \"M47D20\",\n          \"M47204D1\"\n      ],\n      \"potenciaHP\": 136,\n      \"potenciaKw\": 100,\n      \"cilindrada\": 1951,\n      \"transmision\": \"Caja de cambios 5 velocidades\",\n      \"alimentacion\": \"\",\n      \"numMarchas\": 5,\n      \"rvCode\": \"34242\",\n      \"ktype\": \"15638\"\n  },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-vehiculo_2","title":"Explicaci\u00f3n veh\u00edculo","text":"Atributo Tipo Descripci\u00f3n <code>idLocal</code> int32 Identificador local del veh\u00edculo. <code>idEmpresa</code> int32 Identificador de la empresa propietaria del veh\u00edculo. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n del veh\u00edculo (ejemplo: \"2024-01-30T15:42:34\"). <code>codigo</code> string C\u00f3digo \u00fanico del veh\u00edculo. <code>estado</code> array(int32) Lista de estados del veh\u00edculo.(EnTramite, Revisado, Despiezado, Calculado, EnCampa, Destruido, Procesando, Baja, EnVenta, Sideo, ErrorCalculo, Valorado, Descontaminado, Tasado, ErrorAugias, Otros) <code>bastidor</code> string N\u00famero de bastidor del veh\u00edculo. <code>matricula</code> string N\u00famero de matr\u00edcula del veh\u00edculo. <code>color</code> string Color del veh\u00edculo. <code>kilometraje</code> int32 Kilometraje actual del veh\u00edculo. <code>anyoVehiculo</code> int32 A\u00f1o de fabricaci\u00f3n del veh\u00edculo. <code>codigoMotor</code> string C\u00f3digo del motor del veh\u00edculo. <code>codigoCambio</code> string C\u00f3digo de cambio del veh\u00edculo. <code>observaciones</code> string Observaciones adicionales sobre el veh\u00edculo. <code>urlsImgs</code> array(strings) Lista de URLs de im\u00e1genes representativas del veh\u00edculo. <code>codMarca</code> string C\u00f3digo de marca del veh\u00edculo. <code>nombreMarca</code> string Nombre de la marca del veh\u00edculo. <code>codModelo</code> string C\u00f3digo del modelo del veh\u00edculo. <code>nombreModelo</code> string Nombre del modelo del veh\u00edculo. <code>codVersion</code> string C\u00f3digo de versi\u00f3n del veh\u00edculo. <code>nombreVersion</code> string Nombre de la versi\u00f3n del veh\u00edculo. <code>tipoVersion</code> string Tipo de versi\u00f3n del veh\u00edculo. <code>combustible</code> string Tipo de combustible del veh\u00edculo. <code>puertas</code> int32 N\u00famero de puertas del veh\u00edculo. <code>anyoInicio</code> int32 A\u00f1o de inicio de producci\u00f3n del veh\u00edculo. <code>anyoFin</code> int32 A\u00f1o de fin de producci\u00f3n del veh\u00edculo. <code>tiposMotor</code> array(string) Lista de tipos de motor del veh\u00edculo. <code>potenciaHP</code> int32 Potencia del motor en caballos de fuerza. <code>potenciaKw</code> int32 Potencia del motor en kilovatios. <code>cilindrada</code> int32 Cilindrada del motor. <code>transmision</code> string Tipo de transmisi\u00f3n del veh\u00edculo. <code>alimentacion</code> string Tipo de alimentaci\u00f3n del veh\u00edculo. <code>numMarchas</code> int32 N\u00famero de marchas de la transmisi\u00f3n del veh\u00edculo. <code>rvCode</code> string C\u00f3digo de RV del veh\u00edculo. <code>ktype</code> string C\u00f3digo \u00fanico de compatibilidad con ebay"},{"location":"es/APIS/APIInventario/#recuperarcambiosvehiculoscanalempresa","title":"RecuperarCambiosVehiculosCanalEmpresa","text":"<p>Description</p> <p>El m\u00e9todo {RecuperarCambiosVehiculosCanalEmpresa} permite recuperar informaci\u00f3n espec\u00edfica de veh\u00edculos de una empresa.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/RecuperarCambiosVehiculosCanalEmpresa</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>{\n    \"vehiculos\":[\n        \"idLocal\": 49595,\n        \"idEmpresa\": 1460,\n        \"fechaMod\": \"2024-01-30T15:42:34\",\n    ...\n    ],\n    \"result_set\": {\n            \"total\": 10695,\n            \"count\": 500,\n            \"offset\": 500,\n            \"lastId\": 1945959\n    }\n}\n</code></pre></li> </ol> <p>Par\u00e1metros de RecuperarCambiosVehiculosCanalEmpresa:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener vehiculos <code>lastid</code> Header (0) Required int32 Utilizar el LastId devuelto en el Result_Set de la Paginaci\u00f3n para obtener la siguiente tanda de piezas y sus veh\u00edculos <code>offset</code> Header (0) Required int32 Cantidad de piezas que deseamos recuperar con un l\u00edmite m\u00e1ximo de 1000 <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa."},{"location":"es/APIS/APIInventario/#code-exe_2","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/RecuperarCambiosVehiculosCanalEmpresa\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"lastid\", lastid);\nrequest.AddHeader(\"offset\", offset);\nrequest.AddHeader(\"idempresa\", idempresa);\n\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\n\nimport java.io.IOException;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String apiKey = \"your_api_key\";\n        String fecha = \"your_date\";\n        Integer lastid = 0;\n        Integer offset = 0;\n        Integer idempresa = 0;\n\n        CloseableHttpClient httpClient = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanalEmpresa\");\n        httpPost.addHeader(\"apiKey\", apiKey);\n        httpPost.addHeader(\"fecha\", fecha);\n        httpPost.addHeader(\"lastid\", lastid);\n        httpPost.addHeader(\"offset\", offset);\n        httpPost.addHeader(\"idempresa\", idempresa);\n\n        CloseableHttpResponse response = httpClient.execute(httpPost);\n\n        System.out.println(response.getEntity().getContent().toString());\n    }\n}\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 0\n        offset = 0\n        idempresa = 0\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha,\n            'lastid': lastid,\n            'offset': offset,\n            'idempresa': idempresa\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanalEmpresa', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n        const lastid = 0;\n        const offset = 0;\n        const idempresa = 0;\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanalEmpresa', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha,\n                'lastid': lastid,\n                'offset': offset,\n                'idempresa': idempresa\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>    require 'uri'\n    require 'net/http'\n\n    def main\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n        lastid = 0\n        offset = 0\n        idempresa = 0\n\n        url = URI(\"https://apis.metasync.com/Pedidos/RecuperarCambiosVehiculosCanalEmpresa\")\n\n        https = Net::HTTP.new(url.host, url.port)\n        https.use_ssl = true\n\n        request = Net::HTTP::Post.new(url)\n        request[\"apiKey\"] = api_key\n        request[\"fecha\"] = fecha\n        request[\"lastid\"] = lastid\n        request[\"offset\"] = offset\n        request[\"idempresa\"] = idempresa\n\n        response = https.request(request)\n        puts response.read_body\n    end\n\n    main()\n</code></pre>"},{"location":"es/APIS/APIInventario/#vehiculo_3","title":"Veh\u00edculo","text":"vehiculo<pre><code>    {\n      \"idLocal\": 49595,\n      \"idEmpresa\": 1460,\n      \"fechaMod\": \"2024-01-30T15:42:34\",\n      \"codigo\": \"10424\",\n      \"estado\": [\n          15,\n          5\n      ],\n      \"bastidor\": \"WBAAL71070CF45890\",\n      \"matricula\": \"2658-FFD\",\n      \"color\": \"NEGRO\",\n      \"kilometraje\": 0,\n      \"anyoVehiculo\": 2006,\n      \"codigoMotor\": \"M47D20\",\n      \"codigoCambio\": \"\",\n      \"observaciones\": \"\",\n      \"urlsImgs\": [\n                \"https://cdn11.metasync.com/9QcoK6IHNWwkXAisjXlSocco3IZ94WwjUyYihhJLRMNwnPYqi0JEzw==\"\n            ],\n      \"codMarca\": \"01130\",\n      \"nombreMarca\": \"BMW\",\n      \"codModelo\": \"01130046\",\n      \"nombreModelo\": \"SERIE 3 BERLINA (E46)\",\n      \"codVersion\": \"011300460080001\",\n      \"nombreVersion\": \"320d\",\n      \"tipoVersion\": \"BerS\",\n      \"combustible\": \"Diesel\",\n      \"puertas\": null,\n      \"anyoInicio\": 1998,\n      \"anyoFin\": 2001,\n      \"tiposMotor\": [\n          \"M47D20\",\n          \"M47204D1\"\n      ],\n      \"potenciaHP\": 136,\n      \"potenciaKw\": 100,\n      \"cilindrada\": 1951,\n      \"transmision\": \"Caja de cambios 5 velocidades\",\n      \"alimentacion\": \"\",\n      \"numMarchas\": 5,\n      \"rvCode\": \"34242\",\n      \"ktype\": \"15638\"\n  },\n</code></pre>"},{"location":"es/APIS/APIInventario/#explicacion-vehiculo_3","title":"Explicaci\u00f3n veh\u00edculo","text":"Atributo Tipo Descripci\u00f3n <code>idLocal</code> int32 Identificador local del veh\u00edculo. <code>idEmpresa</code> int32 Identificador de la empresa propietaria del veh\u00edculo. <code>fechaMod</code> string Fecha y hora de la \u00faltima modificaci\u00f3n de la informaci\u00f3n del veh\u00edculo (ejemplo: \"2024-01-30T15:42:34\"). <code>codigo</code> string C\u00f3digo \u00fanico del veh\u00edculo. <code>estado</code> array(int32) Lista de estados del veh\u00edculo.(EnTramite, Revisado, Despiezado, Calculado, EnCampa, Destruido, Procesando, Baja, EnVenta, Sideo, ErrorCalculo, Valorado, Descontaminado, Tasado, ErrorAugias, Otros) <code>bastidor</code> string N\u00famero de bastidor del veh\u00edculo. <code>matricula</code> string N\u00famero de matr\u00edcula del veh\u00edculo. <code>color</code> string Color del veh\u00edculo. <code>kilometraje</code> int32 Kilometraje actual del veh\u00edculo. <code>anyoVehiculo</code> int32 A\u00f1o de fabricaci\u00f3n del veh\u00edculo. <code>codigoMotor</code> string C\u00f3digo del motor del veh\u00edculo. <code>codigoCambio</code> string C\u00f3digo de cambio del veh\u00edculo. <code>observaciones</code> string Observaciones adicionales sobre el veh\u00edculo. <code>urlsImgs</code> array(strings) Lista de URLs de im\u00e1genes representativas del veh\u00edculo. <code>codMarca</code> string C\u00f3digo de marca del veh\u00edculo. <code>nombreMarca</code> string Nombre de la marca del veh\u00edculo. <code>codModelo</code> string C\u00f3digo del modelo del veh\u00edculo. <code>nombreModelo</code> string Nombre del modelo del veh\u00edculo. <code>codVersion</code> string C\u00f3digo de versi\u00f3n del veh\u00edculo. <code>nombreVersion</code> string Nombre de la versi\u00f3n del veh\u00edculo. <code>tipoVersion</code> string Tipo de versi\u00f3n del veh\u00edculo. <code>combustible</code> string Tipo de combustible del veh\u00edculo. <code>puertas</code> int32 N\u00famero de puertas del veh\u00edculo. <code>anyoInicio</code> int32 A\u00f1o de inicio de producci\u00f3n del veh\u00edculo. <code>anyoFin</code> int32 A\u00f1o de fin de producci\u00f3n del veh\u00edculo. <code>tiposMotor</code> array(string) Lista de tipos de motor del veh\u00edculo. <code>potenciaHP</code> int32 Potencia del motor en caballos de fuerza. <code>potenciaKw</code> int32 Potencia del motor en kilovatios. <code>cilindrada</code> int32 Cilindrada del motor. <code>transmision</code> string Tipo de transmisi\u00f3n del veh\u00edculo. <code>alimentacion</code> string Tipo de alimentaci\u00f3n del veh\u00edculo. <code>numMarchas</code> int32 N\u00famero de marchas de la transmisi\u00f3n del veh\u00edculo. <code>rvCode</code> string C\u00f3digo de RV del veh\u00edculo. <code>ktype</code> string C\u00f3digo \u00fanico de compatibilidad con ebay"},{"location":"es/APIS/APIInventario/#result_set_2","title":"Result_set","text":"result_set<pre><code>    \"result_set\": {\n        \"total\": 10696,\n        \"count\": 1000,\n        \"offset\": 1000,\n        \"lastId\": 1946873\n    }\n</code></pre> <p>Datos result_set:</p> Atributo Tipo Descripci\u00f3n <code>lastid</code> int32 \u00daltima id de pieza que recibimos para pasar a la siguiente iteraci\u00f3n <code>offset</code> int32 Cantidad de datos que deseamos recuperar max 1000 <code>total</code> int32 Cantidad total de vehiculos <code>count</code> int32 Cantidad de datos encontrados en esa iteraci\u00f3n max 1000 <pre><code>Si el count fuese 0 y estuviesemos iterando habremos llegado al final del inventario.\n\nSi el count fuese &lt; que offset tambi\u00e9n indicaria que estamos en la \u00faltima tanda del inventario.\n</code></pre>"},{"location":"es/APIS/APIInventario/#conteopiezas","title":"ConteoPiezas","text":"<p>Description</p> <p>El m\u00e9todo {ConteoPiezas} devuelve la cantidad espec\u00edfica de piezas a partir de una fecha</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/ConteoPiezas</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>    20\n</code></pre></li> </ol> <p>Par\u00e1metros de ConteoPiezas:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGldK6ZwhQ7C7v9S) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener vehiculos"},{"location":"es/APIS/APIInventario/#code-exe_3","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ConteoPiezas\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\n\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String apiKey = \"your_api_key\";\n        String fecha = \"your_date\";\n\n        CloseableHttpClient httpClient = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/ConteoPiezas\");\n        httpPost.addHeader(\"apiKey\", apiKey);\n        httpPost.addHeader(\"fecha\", fecha);\n\n        CloseableHttpResponse response = httpClient.execute(httpPost);\n\n        System.out.println(response.getEntity().getContent().toString());\n    }\n}\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/ConteoPiezas', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/ConteoPiezas', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\ndef main\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n\n    url = URI(\"https://apis.metasync.com/Pedidos/ConteoPiezas\")\n\n    https = Net::HTTP.new(url.host, url.port)\n    https.use_ssl = true\n\n    request = Net::HTTP::Post.new(url)\n    request[\"apiKey\"] = api_key\n    request[\"fecha\"] = fecha\n\n    response = https.request(request)\n    puts response.read_body\nend\n\nmain()\n</code></pre>"},{"location":"es/APIS/APIInventario/#conteopiezasempresa","title":"ConteoPiezasEmpresa","text":"<p>Description</p> <p>El m\u00e9todo {ConteoPiezasEmpresa} devuelve la cantidad espec\u00edfica de piezas a partir de una fecha sobre una empresa</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/ConteoPiezasEmpresa</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>    20\n</code></pre></li> </ol> <p>Par\u00e1metros de ConteoPiezasEmpresa:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGldK6ZwhQ7C7v9S) Required string Apikey Canal. <code>fecha</code> Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener vehiculos <code>idempresa</code> Header (1475) Required int32 Id local de la empresa"},{"location":"es/APIS/APIInventario/#code-exe_4","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ConteoPiezasEmpresa\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"idempresa\", idempresa);\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    String apiKey = \"your_api_key\";\n    String fecha = \"your_date\";\n    Integer idempresa = 0;\n\n    CloseableHttpClient httpClient = HttpClients.createDefault();\n    HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/ConteoPiezasEmpresa\");\n    httpPost.addHeader(\"apiKey\", apiKey);\n    httpPost.addHeader(\"fecha\", fecha);\n    httpPost.addHeader(\"idempresa\", idempresa);\n\n    CloseableHttpResponse response = httpClient.execute(httpPost);\n\n    System.out.println(response.getEntity().getContent().toString());\n</code></pre> <pre><code>import requests\ndef main():\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n    idempresa = 0\n\n    headers = {\n        'apiKey': api_key,\n        'fecha': fecha,\n        'idempresa': idempresa\n    }\n\n    response = requests.post('https://apis.metasync.com/Pedidos/ConteoPiezasEmpresa', headers=headers)\n\n    print(response.text)\n</code></pre> <pre><code>const fetch = require('node-fetch');\n\nasync function main() {\n    const apiKey = 'your_api_key';\n    const fecha = 'your_date';\n    const idempresa = 0;\n\n    const response = await fetch('https://apis.metasync.com/Pedidos/ConteoPiezasEmpresa', {\n        method: 'POST',\n        headers: {\n            'apiKey': apiKey,\n            'fecha': fecha,\n            'idempresa': idempresa\n        }\n    });\n\n    const data = await response.text();\n    console.log(data);\n}\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\ndef main\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n    idempresa = 0\n\n    url = URI(\"https://apis.metasync.com/Pedidos/ConteoPiezasEmpresa\")\n\n    https = Net::HTTP.new(url.host, url.port)\n    https.use_ssl = true\n\n    request = Net::HTTP::Post.new(url)\n    request[\"apiKey\"] = api_key\n    request[\"fecha\"] = fecha\n    request[\"idempresa\"] = idempresa\n\n    response = https.request(request)\n    puts response.read_body\nend\n\nmain()\n</code></pre>"},{"location":"es/APIS/APIInventario/#conteovehiculos","title":"ConteoVehiculos","text":"<p>Description</p> <p>El m\u00e9todo {ConteoVehiculos} la cantidad especifica de vehiculos desde una fecha dada.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/ConteoVehiculos</p> <p>Response: --&gt; (1) &lt;--</p> <ol> <li> <pre><code>20\n</code></pre></li> </ol> <p>Par\u00e1metros de ConteoVehiculos:</p> Name Parameter Type Example Type Description 'apikey' Header (MS-5iq5RTxT6EW1BBqTHmGldK6ZwhQ7C7v9S) Required string API key Channel 'fecha' Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener vehiculos"},{"location":"es/APIS/APIInventario/#code-exe_5","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ConteoVehiculos\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\n\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String apiKey = \"your_api_key\";\n        String fecha = \"your_date\";\n\n        CloseableHttpClient httpClient = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/ConteoVehiculos\");\n        httpPost.addHeader(\"apiKey\", apiKey);\n        httpPost.addHeader(\"fecha\", fecha);\n\n        CloseableHttpResponse response = httpClient.execute(httpPost);\n\n        System.out.println(response.getEntity().getContent().toString());\n    }\n}\n</code></pre> <pre><code>    import requests\n\n    def main():\n        api_key = 'your_api_key'\n        fecha = 'your_date'\n\n        headers = {\n            'apiKey': api_key,\n            'fecha': fecha\n        }\n\n        response = requests.post('https://apis.metasync.com/Pedidos/ConteoVehiculos', headers=headers)\n\n        print(response.text)\n\n    if __name__ == \"__main__\":\n        main()\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function main() {\n        const apiKey = 'your_api_key';\n        const fecha = 'your_date';\n\n        const response = await fetch('https://apis.metasync.com/Pedidos/ConteoVehiculos', {\n            method: 'POST',\n            headers: {\n                'apiKey': apiKey,\n                'fecha': fecha\n            }\n        });\n\n        const data = await response.text();\n        console.log(data);\n    }\n\n    main();\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\ndef main\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n\n    url = URI(\"https://apis.metasync.com/Pedidos/ConteoVehiculos\")\n\n    https = Net::HTTP.new(url.host, url.port)\n    https.use_ssl = true\n\n    request = Net::HTTP::Post.new(url)\n    request[\"apiKey\"] = api_key\n    request[\"fecha\"] = fecha\n\n    response = https.request(request)\n    puts response.read_body\nend\n\nmain()\n</code></pre>"},{"location":"es/APIS/APIInventario/#conteovehiculosempresa","title":"ConteoVehiculosEmpresa","text":"<p>Description</p> <p>El m\u00e9todo {ConteoVehiculosEmpresa} la cantidad especifica de vehiculos desde una fecha dada sobre una empresa.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Almacen/ConteoVehiculosEmpresa</p> <p>Response: --&gt; (1) &lt;--</p> <ol> <li> <pre><code>3\n</code></pre></li> </ol> <p>Par\u00e1metros de ConteoVehiculosEmpresa:</p> Name Parameter Type Example Type Description 'apikey' Header (MS-5iq5RTxT6EW1BBqTHmGldK6ZwhQ7C7v9S) Required string API key Channel 'fecha' Header (20/12/2023 21:29:56) Required string Fecha a partir de la cual deseamos obtener vehiculos 'idempresa' Header (1475) Required int32 Id local de la empresa"},{"location":"es/APIS/APIInventario/#code-exe_6","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ConteoVehiculosEmpresa\");\nrequest.AddHeader(\"apiKey\", apiKey.ToString());\nrequest.AddHeader(\"fecha\", fecha.ToString());\nrequest.AddHeader(\"idempresa\", idempresa);\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    String apiKey = \"your_api_key\";\n    String fecha = \"your_date\";\n    Integer idempresa = 0;\n\n    CloseableHttpClient httpClient = HttpClients.createDefault();\n    HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/ConteoVehiculosEmpresa\");\n    httpPost.addHeader(\"apiKey\", apiKey);\n    httpPost.addHeader(\"fecha\", fecha);\n    httpPost.addHeader(\"idempresa\", idempresa);\n\n    CloseableHttpResponse response = httpClient.execute(httpPost);\n\n    System.out.println(response.getEntity().getContent().toString());\n</code></pre> <pre><code>import requests\ndef main():\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n    idempresa = 0\n\n    headers = {\n        'apiKey': api_key,\n        'fecha': fecha,\n        'idempresa': idempresa\n    }\n\n    response = requests.post('https://apis.metasync.com/Pedidos/ConteoVehiculosEmpresa', headers=headers)\n\n    print(response.text)\n</code></pre> <pre><code>const fetch = require('node-fetch');\n\nasync function main() {\n    const apiKey = 'your_api_key';\n    const fecha = 'your_date';\n    const idempresa = 0;\n\n    const response = await fetch('https://apis.metasync.com/Pedidos/ConteoVehiculosEmpresa', {\n        method: 'POST',\n        headers: {\n            'apiKey': apiKey,\n            'fecha': fecha,\n            'idempresa': idempresa\n        }\n    });\n\n    const data = await response.text();\n    console.log(data);\n}\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\ndef main\n    api_key = 'your_api_key'\n    fecha = 'your_date'\n    idempresa = 0\n\n    url = URI(\"https://apis.metasync.com/Pedidos/ConteoVehiculosEmpresa\")\n\n    https = Net::HTTP.new(url.host, url.port)\n    https.use_ssl = true\n\n    request = Net::HTTP::Post.new(url)\n    request[\"apiKey\"] = api_key\n    request[\"fecha\"] = fecha\n    request[\"idempresa\"] = idempresa\n\n    response = https.request(request)\n    puts response.read_body\nend\n\nmain()\n</code></pre>"},{"location":"es/APIS/APIPadelMatch/","title":"Api Club","text":"<p>Descripci\u00f3n PadelMatch</p> <p>En nuestra aplicacion de PadelMatch podr\u00e1s encontrar pistas disponibles para poder jugar, en el club que desees que implemente nuestro software,  tambi\u00e9n tenemos un sistema interno de puntos por usuario con rankings mundiales, nada m\u00e1s entrar a la aplicaci\u00f3n podr\u00e1s ver un login para usuarios con opci\u00f3n para registrarse.</p> <p>Casos de uso</p> <p>1 - Crear Pista: con este m\u00e9todo podr\u00e1s crear todas las pistas de tu club, este m\u00e9todo recibir\u00e1 por Header el Apikey y por Body en forma de JSON pasaremos PistaTipo enum, PistaUbi enum, PistaVisual enum.</p> <p>2 - Crear UsuarioRol: con este m\u00e9todo podr\u00e1s crear usuarios con diferentes roles para acceder a diferentes niveles del software. Los par\u00e1metros de este m\u00e9todo son: Header Username, Header Password, Header Rol el cual ser\u00e1 uno de los enums...</p> <p>3 - Reservar Hora: con este m\u00e9todo podr\u00e1s reservar para jugar una partida con los filtros que decidas.</p> <p>4 - MoreXPBonus: este m\u00e9todo aumentar\u00e1 la experiencia obtenida despues de una partida al jugador que el club considere que lo ha hecho mejor.</p> <p>5 - CreateReservasNextMonth: Con este m\u00e9todo crearemos las posibles horas para</p> <p>Usuarios Roles</p> <p>Asigna los roles con cuidado ya que un admin podr\u00e1 borrar pistas eliminar otros usuarios de menor Rol...</p> <p>RESPUESTAS API PADELMATCH</p> <p>Gen\u00e9ricos:</p> <ul> <li> <p>200 (OK)</p> </li> <li> <p>400 (BadRequest + Mensaje de error)</p> </li> <li> <p>500 (Error interno de la API - Mensaje de excepci\u00f3n)</p> </li> </ul>"},{"location":"es/APIS/APIPadelMatch/#enums","title":"Enums:","text":"<p>Enum UserRol --&gt; (1) &lt;--</p> <p>Enum PistaTipo --&gt; (2) &lt;--</p> <p>Enum PistaUbi --&gt; (3) &lt;--</p> <p>Enum PistaVisual --&gt; (4) &lt;--</p> <ol> <li> <p> UserRol<pre><code>{\n  \"Invitado\": 0,\n  \"Registrado\": 1,\n  \"Moderador\": 2,\n  \"Admin\": 3,\n}\n</code></pre></p> </li> <li> <p> PistaTipo<pre><code>{\n  \"Simples\": 0,\n  \"Dobles\": 1\n}\n</code></pre></p> </li> <li> <p> PistaUbi<pre><code>{\n  \"Exterior\": 0,\n  \"Exterior Cubierta\": 1,\n  \"Interior\": 2\n}\n</code></pre></p> </li> <li> <p> PistaVisual<pre><code>{\n  \"Panoramica\": 0,\n  \"Antigua\": 1\n}\n</code></pre></p> </li> </ol>"},{"location":"es/APIS/APIPadelMatch/#clases-padelmatch","title":"Clases PadelMatch","text":"Pista<pre><code>public class Pista {\n    public int idpista { get; set; }\n    public int idclub { get; set; }\n    public int maxjugadores { get; set; }\n    public PistaTipo tipopista { get; set; } // Enumeraci\u00f3n PistaTipo para el tipo de pista\n    public PistaUbi ubipista { get; set; } // Enumeraci\u00f3n PistaUbi para la ubicaci\u00f3n de la pista\n    public string Material { get; set; }\n    public bool disponible { get; set; }\n    public string[] UrlsImgs { get; set; } // Array de strings para las URLs de las im\u00e1genes\n    public DateTime FechaMod { get; set; }\n}\n</code></pre> Reserva<pre><code>public class Reserva {\n    public int idreserva { get; set; }\n    public int idusuarioprincipal { get; set; }\n    public int idpista { get; set; }\n    public DateTime horainicio { get; set; }\n    public DateTime horafin { get; set; }\n    public int codigoinvitacion { get; set; }\n    public boolean permitecancelacion { get; set; } //por defecto sera true hasta 2horas antes de la partida que se pondr\u00e1 a false y ya no se podr\u00e1n anular reservas y el importe pagado no se devolver\u00e1\n    public int idusuario2 { get; set; }\n    public int idusuario3 { get; set; }\n    public int idusuario4 { get; set; }\n    public int idclub { get; set; }\n}\n</code></pre> Usuario<pre><code>public class Usuario {\n    public int Id { get; set; }\n    public string Nombre { get; set; }\n    public string Mail { get; set; }\n    public string Pwd { get; set; }\n    public int Nivel { get; set; }\n}\n</code></pre> Club<pre><code>public class Club {\n    public int Id { get; set; }\n    public string NombreClub { get; set; }\n    public int CantidadPistas { get; set; }\n}\n</code></pre>"},{"location":"es/APIS/APIPadelMatch/#metodos-apiinventario","title":"Metodos ApiInventario","text":"\u00ba Endpoint Name Endpoint type 1 CrearPista Post 2 CrearUsuario Post 3 CrearHorasDisponiblesNextMonthEmpresa Post 4 CrearReserva Post 5 AnularReserva Delete"},{"location":"es/APIS/APIPadelMatch/#crearpista","title":"CrearPista","text":"<p>Description</p> <p>El m\u00e9todo CrearPista permite recuperar informaci\u00f3n general sobre el inventario de las empresas.</p> <p>Info</p> <p>Ruta: https://192.168.1.139:10222/Club/CrearPista</p> <p>Respuesta: --&gt; (1) &lt;--</p> <ol> <li> response:<pre><code>{\n\n}\n</code></pre></li> </ol> <p>Par\u00e1metros de CrearPista:</p> Nombre Tipo Parametro Ejemplo Tipo Descripci\u00f3n <code>apikey</code> Header (your apikey) Required string Apikey seguridad. <code>idclub</code> Header (0) Required int32 id local del club <code>ubi</code> Header (0) Required int32 Ubicaci\u00f3n de la pista si es outdoor indoor... <code>tipo</code> Header (0) Required int32 Si es panoramica o no la pista <code>material</code> Header (0) Required int32 Material del suelo de la pista <code>urlimgs</code> Header (0) Required string Fotos de la pista <p>a</p> <p>a</p> <ol> <li> Resultado vacio:<pre><code>    {\n        si el idclub es erroneo no se crear\u00e1 la pista y devolver\u00e1 un 500\n    }\n</code></pre></li> </ol>"},{"location":"es/APIS/APIPadelMatch/#code-exe","title":"Code exe","text":"C#java <pre><code>var options = new RestClientOptions(\"https://192.168.111.111\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Club/CrearPista\");\nrequest.AddHeader(\"apikey\", apiKey.ToString());\nrequest.AddHeader(\"idclub\", idclub.ToString());\nrequest.AddHeader(\"ubi\", ubi.ToString());\nrequest.AddHeader(\"tipo\", tipo.ToString());\nrequest.AddHeader(\"material\", material.ToString());\nrequest.AddHeader(\"urlimgs\", urlimgs);\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <p>``` java</p> <p>import org.apache.http.client.methods.CloseableHttpResponse;   import org.apache.http.client.methods.HttpPost;   import org.apache.http.entity.StringEntity;   import org.apache.http.impl.client.CloseableHttpClient;   import org.apache.http.impl.client.HttpClients;</p> <p>import java.io.IOException;</p> <p>public class Main {       public static void main(String[] args) throws IOException {           String apiKey = \"your_api_key\";           int idclub = 0;           int ubi = 0;           int tipo = 0;           int material = 0;           String urlimgs = \"your_image_urls\";</p> <pre><code>      CloseableHttpClient httpClient = HttpClients.createDefault();\n      HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/RecuperarCambiosCanal\");\n      httpPost.addHeader(\"apikey\", apiKey);\n      httpPost.addHeader(\"idclub\", Integer.toString(idclub));\n      httpPost.addHeader(\"ubi\", Integer.toString(ubi));\n      httpPost.addHeader(\"tipo\", Integer.toString(tipo));\n      httpPost.addHeader(\"material\", Integer.toString(material));\n      httpPost.addHeader(\"urlimgs\", urlimgs);\n\n      CloseableHttpResponse response = httpClient.execute(httpPost);\n\n      System.out.println(response.getEntity().getContent().toString());\n  }\n</code></pre> <p>}     ```</p>"},{"location":"es/APIS/APIPedidos/","title":"APIPedidos","text":"<p>Description ApiPedidos</p> <p>Las capacidades de la API de Pedidos abarcan diversas operaciones, que incluyen la creaci\u00f3n de un pedido, la actualizaci\u00f3n de su estado, la adici\u00f3n de seguimiento, la anulaci\u00f3n del pedido, la obtenci\u00f3n de detalles de seguimiento y la recuperaci\u00f3n de su origen.</p> <p>Todos estos m\u00e9todos requieren el uso de una API key, la cual ser\u00e1 proporcionada por nuestro soporte, garantizando as\u00ed la seguridad y la autorizaci\u00f3n adecuadas para acceder a estas funciones.</p> <p>Casos de uso</p> <p>1 - Si necesitas crear un pedido debr\u00e1s saber que la pieza deber\u00e1 estar disponible para su venta y la pieza tendr\u00e1 que pertenecer a tu empresa, el c\u00f3digo del pedido no se podr\u00e1 repetir y al m\u00e9todo de crear pedido le tendr\u00e1s que pasar tu Apikey <code>Header</code>, tu idempresa <code>Header</code> y un json <code>Request Body</code>  el c\u00faal deber\u00e1 tener esta estructura.</p> <p>2 - Si deseas actualizar el estado de un pedido deber\u00e1s pasar el c\u00f3digo del pedido <code>Header</code>, el Apikey <code>Header</code>, el idempresa <code>Header</code> y el estado al cual deseamos actualizar el pedido tambi\u00e9n por <code>Header</code>.</p> <p>3 - Si deseas anular un pedido tendr\u00e1s que pasar el Apikey <code>Header</code>, el c\u00f3digo del pedido <code>Header</code> y el idempresa <code>Header</code>.</p> <p>4 - Si deseas agregar seguimiento a un pedido tendr\u00e1s que pasar el Apikey <code>Header</code>, el c\u00f3digo del pedido <code>Header</code>, el idempresa <code>Header</code> y la url de seguimiento que deseamos a\u00f1adir <code>Header</code>.</p> <p>5 - Si deseas recuperar pedido origen</p> <p>6 - Si deseas Obtener el seguimiento</p> <p>Que pasa si tengo la version 2</p> <p>Estas desactualizado actualiza pls</p> <p>Que pasa si tengo la version 3</p> <p>Estas al dia eres un crack!</p> <p>RESPUESTAS API PEDIDOS V3</p> <p>Gen\u00e9ricos:</p> <ul> <li> <p>200 (OK)</p> </li> <li> <p>400 (BadRequest + Mensaje de error)</p> </li> <li> <p>500 (Error interno de la API - Mensaje de excepci\u00f3n)</p> </li> <li> <p>503 (Error en el servicio - Mensaje por defecto)</p> </li> </ul>"},{"location":"es/APIS/APIPedidos/#enums","title":"Enums:","text":"<p>Enum Estado --&gt; (1) &lt;--</p> <p>Enum EstadoPago --&gt; (2) &lt;--</p> <p>Enum FormaPago --&gt; (3) &lt;--</p> <p>Enum TipoDireccion --&gt; (4) &lt;--</p> <p>Enum TipoLinea --&gt; (5) &lt;--</p> <ol> <li> <p> Estados<pre><code>{\n  \"Desconocido\": 0,\n  \"EnSeguimiento\": 1,\n  \"Reservado\": 2,\n  \"Procesando\": 3,\n  \"EnReparto\": 4,\n  \"Entregado\": 5,\n  \"Anulado\": 6,\n  \"Devolucion\": 7,\n  \"DevolucionParcial\": 8\n}\n</code></pre></p> </li> <li> <p> EstadoPago<pre><code>{\n  \"Pendiente\": 0,\n  \"EsperaConfirmacion\": 1,\n  \"Pagado\": 2,\n  \"Fallido\": 3,\n  \"PendienteDevolucion\": 4,\n  \"Devuelto\": 5\n}\n</code></pre></p> </li> <li> <p> FormaPago<pre><code>{\n  \"Desconocido\": 0,\n  \"Cuenta\": 1,\n  \"Tarjeta\": 2,\n  \"Transferencia\": 3,\n  \"Paypal\": 4,\n  \"Bizum\": 5,\n  \"Otros\": 6\n}\n</code></pre></p> </li> <li> <p> TipoDireccion<pre><code>{\n    \"Facturacion\" : 0,\n    \"Envio\" : 1,\n    \"OrigenEnvio\" : 2\n}\n</code></pre></p> </li> <li> <p> TipoLinea<pre><code>{\n    \"Libre\" : 0,\n    \"Pieza\" : 1,\n    \"Ruta\" : 2\n}\n</code></pre></p> </li> </ol>"},{"location":"es/APIS/APIPedidos/#clases-apipedidos","title":"Clases ApiPedidos","text":"Pedido<pre><code>    public class Pedido {\n    [Key]\n    public int Id { get; set; }\n    public int IdVendedor { get; set; }\n    public string Proveedor { get; set; } = String.Empty;\n    public string Canal { get; set; } = String.Empty;\n    public string Codigo { get; set; } = String.Empty;\n    public string IdCliente { get; set; } = String.Empty;\n    public string? CodigoPago { get; set; }\n    public string? CodigoCrvnet { get; set; }\n    public string? SeguimientoUrl { get; set; }\n    public Estado Estado { get; set; }\n    public EstadoPago EstadoPago { get; set; }\n    public FormaPago FormaPago { get; set; }\n    public decimal Base { get; set; }\n    public decimal PorcentajeDescuento { get; set; }\n    public decimal Descuento { get; set; }\n    public decimal Subtotal { get; set; }\n    public decimal PorcentajeIva { get; set; }\n    public decimal Iva { get; set; }\n    public decimal Total { get; set; }\n    public DateTime FechaMod { get; set; }\n    public DateTime FechaIn { get; set; }\n    public string? Observaciones { get; set; }\n    public int IdFacturacion { get; set; }\n    public int? IdEnvio { get; set; }\n    public int IdOrigenEnvio { get; set; }\n    public bool RecogidaTienda { get; set; }\n    public int EstadoAccion { get; set; }\n    public string? Informacion { get; set; }\n    public int IncidenciasTotal { get; set; }\n    public int IncidenciasAbiertas { get; set; }\n    public bool Contabilizado { get; set; } = false;\n    public string EstadoCRVNet { get; set; } = String.Empty;\n\n    public virtual Direccion Facturacion { get; set; }\n    public virtual Direccion? Envio { get; set; }\n    public virtual Direccion OrigenEnvio { get; set; }\n    public virtual ICollection&lt;Linea&gt; Lineas { get; set; }\n    public virtual ICollection&lt;Documento&gt; Documentos { get; set; }\n    public virtual ICollection&lt;Incidencia&gt; Incidencias { get; set; }\n    }\n    public enum Estado {Desconocido,EnSeguimiento,Reservado,Procesando,EnReparto,Entregado,Anulado,Devolucion,DevolucionParcial}\n    public enum EstadoPago {Pendiente,EsperaConfirmacion,Pagado,Fallido,PendienteDevolucion,Devuelto}\n    public enum FormaPago {Desconocido,Cuenta,Tarjeta,Transferencia,Paypal,Bizum,Otros}\n</code></pre> <p>Direccion<pre><code>    public class Direccion{\n        [Key]\n        public int Id { get; set; }\n        public int IdVendedor { get; set; }\n        public string? Descripcion { get; set; }\n        public TipoDireccion Tipo { get; set; }\n        public string NifCif { get; set; } = String.Empty;\n        public string NombreComercial { get; set; } = String.Empty;\n        public string RazonSocial { get; set; } = String.Empty;\n        public string Domicilio { get; set; } = String.Empty;\n        public string? CodigoProvincia { get; set; }\n        public string Provincia { get; set; } = String.Empty;\n        public string? CodigoPoblacion { get; set; }\n        public string Poblacion { get; set; } = String.Empty;\n        public string CodigoPostal { get; set; } = String.Empty;\n        public string? CodigoPais { get; set; }\n        public string Pais { get; set; } = String.Empty;\n        public string Email { get; set; } = String.Empty;\n        public string Telefono1 { get; set; } = String.Empty;\n        public string? Telefono2 { get; set; }\n        public string? Fax { get; set; }\n        public string? Observaciones { get; set; }\n    }\n    public enum TipoDireccion {Facturacion,Envio,OrigenEnvio}\n</code></pre> Linea<pre><code>    public class Linea{\n        [Key]\n        public int Id { get; set; }\n        public int IdVendedor { get; set; }\n        public int IdPedido { get; set; }\n        public string? Referencia { get; set; }\n        public string Concepto { get; set; } = String.Empty;\n        public int Cantidad { get; set; }\n        public decimal Precio { get; set; }\n        public decimal Base { get; set; }\n        public decimal PorcentajeDescuento { get; set; }\n        public decimal Descuento { get; set; }\n        public decimal Subtotal { get; set; }\n        public TipoLinea Tipo { get; set; }\n\n        public virtual Pedido Pedido { get; set; }\n    }\n    public enum TipoLinea {Libre,Pieza,Ruta}\n</code></pre> Incidencia<pre><code>    public class Incidencia{\n        [Key]\n        public int Id { get; set; }\n        public int IdVendedor { get; set; }\n        public int IdPedido { get; set; }\n        public string IdCliente { get; set; } = String.Empty;\n        public string Observaciones { get; set; } = String.Empty;\n        public TipoIncidencia Tipo { get; set; }\n        public EstadoIncidencia Estado { get; set; }\n        public string Titulo { get; set; } = String.Empty;\n        public DateTime FechaIn { get; set; }\n        public DateTime FechaMod { get; set; }\n\n        public virtual Pedido Pedido { get; set; }\n    }\n    public enum TipoIncidencia { PedidoConRetraso, SolicitudCancelacion, SolicitudFactura, PedidoDefectuoso, General, IntermediacionSideo, IncidenciaCRVNet }\n    public enum EstadoIncidencia { Pendiente, Seguimiento, Resuelto }\n</code></pre> Documento<pre><code>    public class Documento{\n        [Key]\n        public int Id { get; set; }\n        public int IdEmpresa { get; set; }\n        public int IdPedido { get; set; }\n        public string Nombre { get; set; } = String.Empty;\n        public TipoDocumento Tipo { get; set; }\n        public string? Observaciones { get; set; }\n\n        public virtual Pedido Pedido { get; set; }\n    }\n    public enum TipoDocumento {Factura,Albaran,Devolucion,Otro}\n</code></pre> ViewPedidos<pre><code>    public class ViewPedidos{\n        public int Id { get; set; }\n        public int IdVendedor { get; set; }\n        public string Codigo { get; set; } = String.Empty;\n        public string? CodigoPago { get; set; }\n        public string IdCliente { get; set; } = String.Empty;\n        public string? SeguimientoUrl { get; set; }\n        public EstadoPago EstadoPago { get; set; }\n        public FormaPago FormaPago { get; set; }\n        public decimal Base { get; set; }\n        public decimal PorcentajeDescuento { get; set; }\n        public decimal Descuento { get; set; }\n        public decimal Subtotal { get; set; }\n        public decimal PorcentajeIva { get; set; }\n        public decimal Iva { get; set; }\n        public decimal Total { get; set; }\n        public string? Observaciones { get; set; }\n        public int IdFacturacion { get; set; }\n        public int? IdEnvio { get; set; }\n        public int IdOrigenEnvio { get; set; }\n        public bool RecogidaTienda { get; set; }\n\n        public virtual Direccion Facturacion { get; set; }\n        public virtual Direccion? Envio { get; set; }\n        public virtual Direccion OrigenEnvio { get; set; }\n        public virtual ICollection&lt;Linea&gt; Lineas { get; set; }\n        public virtual ICollection&lt;Documento&gt; Documentos { get; set; }\n    }\n</code></pre></p>"},{"location":"es/APIS/APIPedidos/#metodos-apipedidos","title":"Metodos ApiPedidos","text":"\u00ba Endpoint Name Endpoint type 1 CrearPedido Post 2 ActualizarEstado Post 3 AgregarSeguimiento Post 4 AnularPedido Post 5 RecuperarPedidoOrigen Get 6 ObtenerSeguimiento Get"},{"location":"es/APIS/APIPedidos/#crearpedido","title":"CrearPedido","text":"<p>Description</p> <p>El m\u00e9todo {CrearPedido} permite crear un pedidos sobre piezas que se encuentren sin reservar y disponibles.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/CrearPedido</p> <p>Par\u00e1metros de CrearPedido:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal. <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa. <code>JSON BODY</code> BODY (JSON EXAMPLE) Required json introducir JSON pedido"},{"location":"es/APIS/APIPedidos/#json-pedido","title":"Json pedido","text":"Pedido<pre><code>{\n    \"Pedido\": {\n        \"Observaciones\": \"No especificado\",\n        \"IdCliente\": \"yvan troentlin\",\n        \"Codigo\": \"OVOKO_1460_1405978\",\n        \"IdVendedor\": 1460,\n        \"SeguimientoUrl\": \"https://poland.rrr.lt/order/view_order/1405978\",\n        \"EstadoPago\": 2,\n        \"FormaPago\": 2,\n        \"RecogidaTienda\": false,\n        \"PorcentajeIva\": 0,\n        \"Base\": 57.58,\n        \"PorcentajeDescuento\": 0,\n        \"SubTotal\": 57.58,\n        \"Descuento\": 0,\n        \"Total\": 57.58,\n        \"Iva\": 0.0\n    },\n    \"Cliente\": {\n        \"Descripcion\": \"Descripcion Ovoko Vacia\",\n        \"Tipo\": 0,\n        \"NombreComercial\": \"yvan troentlin\",\n        \"RazonSocial\": \"yvan troentlin\",\n        \"Domicilio\": \"8 Boulevard Bel air\",\n        \"CodigoPostal\": \"No especificado\",\n        \"Poblacion\": \"Marseille\",\n        \"Provincia\": \"Marseille\",\n        \"Telefono1\": \"+33652565108\",\n        \"Telefono2\": \"+33652565108\",\n        \"Fax\": \"+33652565108\",\n        \"Email\": \"yvan.troentlin@gmail.com\",\n        \"Pais\": \"FR\",\n        \"Observaciones\": \"No especificado\",\n        \"NifCif\": \"No especificado\"\n    },\n    \"Envio\": {\n        \"Descripcion\": \"No especificado\",\n        \"Tipo\": 1,\n        \"NombreComercial\": \"yvan troentlin\",\n        \"RazonSocial\": \"yvan troentlin\",\n        \"Domicilio\": \"8 Boulevard Bel air\",\n        \"CodigoPostal\": \"No especificado\",\n        \"Poblacion\": \"Marseille\",\n        \"Provincia\": \"\",\n        \"Telefono1\": \"+33652565108\",\n        \"Telefono2\": \"+33652565108\",\n        \"Fax\": \"+33652565108\",\n        \"Email\": \"yvan.troentlin@gmail.com\",\n        \"Pais\": \"FR\",\n        \"Observaciones\": \"No especificado\",\n        \"NifCif\": \"No especificado\"\n    },\n    \"Lineas\": [\n        {\n            \"Tipo\": 1,\n            \"Referencia\": \"215201\",\n            \"Cantidad\": 1,\n            \"Concepto\": \"Sterownik / Modu\u0142 ECU\",\n            \"Precio\": 2.62,\n            \"Base\": 2.62,\n            \"SubTotal\": 2.62,\n            \"PorcentajeDescuento\": 0,\n            \"Descuento\": 0\n        }\n    ]\n}\n</code></pre>"},{"location":"es/APIS/APIPedidos/#explicacion-pedido","title":"Explicaci\u00f3n Pedido","text":"Atributo Tipo Descripci\u00f3n <code>Observaciones</code> string Observaciones relacionadas con el pedido. <code>IdCliente</code> string Identificaci\u00f3n \u00fanica del cliente. <code>Codigo</code> string C\u00f3digo \u00fanico del pedido. <code>IdVendedor</code> int Identificaci\u00f3n \u00fanica del vendedor asociado al pedido. <code>SeguimientoUrl</code> string URL de seguimiento del pedido. <code>EstadoPago</code> int Estado del pago del pedido. <code>FormaPago</code> int Forma de pago utilizada en el pedido. <code>RecogidaTienda</code> boolean Indica si la recogida del pedido se realizar\u00e1 en la tienda. <code>PorcentajeIva</code> float Porcentaje de IVA aplicado al pedido. <code>Base</code> float Monto base del pedido antes de impuestos y descuentos. <code>PorcentajeDescuento</code> float Porcentaje de descuento aplicado al pedido. <code>SubTotal</code> float Subtotal del pedido despu\u00e9s de aplicar descuentos. <code>Descuento</code> float Monto total de descuentos aplicados al pedido. <code>Total</code> float Monto total del pedido despu\u00e9s de impuestos y descuentos. <code>Iva</code> float Monto total del IVA aplicado al pedido."},{"location":"es/APIS/APIPedidos/#explicacion-cliente","title":"Explicaci\u00f3n Cliente","text":"Atributo Tipo Descripci\u00f3n <code>Descripcion</code> string Descripci\u00f3n del cliente. <code>Tipo</code> int Tipo de cliente. <code>NombreComercial</code> string Nombre comercial del cliente. <code>RazonSocial</code> string Raz\u00f3n social del cliente. <code>Domicilio</code> string Direcci\u00f3n del cliente. <code>CodigoPostal</code> string C\u00f3digo postal del cliente. <code>Poblacion</code> string Ciudad o poblaci\u00f3n del cliente. <code>Provincia</code> string Provincia del cliente. <code>Telefono1</code> string N\u00famero de tel\u00e9fono principal del cliente. <code>Telefono2</code> string N\u00famero de tel\u00e9fono secundario del cliente. <code>Fax</code> string N\u00famero de fax del cliente. <code>Email</code> string Correo electr\u00f3nico del cliente. <code>Pais</code> string Pa\u00eds del cliente. <code>Observaciones</code> string Observaciones adicionales sobre el cliente. <code>NifCif</code> string NIF o CIF del cliente."},{"location":"es/APIS/APIPedidos/#explicacion-envio","title":"Explicaci\u00f3n Env\u00edo","text":"Atributo Tipo Descripci\u00f3n <code>Descripcion</code> string Descripci\u00f3n del env\u00edo. <code>Tipo</code> int Tipo de env\u00edo. <code>NombreComercial</code> string Nombre comercial del destinatario del env\u00edo. <code>RazonSocial</code> string Raz\u00f3n social del destinatario del env\u00edo. <code>Domicilio</code> string Direcci\u00f3n del destinatario del env\u00edo. <code>CodigoPostal</code> string C\u00f3digo postal del destinatario del env\u00edo. <code>Poblacion</code> string Ciudad o poblaci\u00f3n del destinatario del env\u00edo. <code>Provincia</code> string Provincia del destinatario del env\u00edo. <code>Telefono1</code> string N\u00famero de tel\u00e9fono principal del destinatario del env\u00edo. <code>Telefono2</code> string N\u00famero de tel\u00e9fono secundario del destinatario del env\u00edo. <code>Fax</code> string N\u00famero de fax del destinatario del env\u00edo. <code>Email</code> string Correo electr\u00f3nico del destinatario del env\u00edo. <code>Pais</code> string Pa\u00eds del destinatario del env\u00edo. <code>Observaciones</code> string Observaciones adicionales sobre el env\u00edo. <code>NifCif</code> string NIF o CIF del destinatario del env\u00edo."},{"location":"es/APIS/APIPedidos/#explicacion-lineas-del-pedido","title":"Explicaci\u00f3n L\u00edneas del Pedido","text":"Atributo Tipo Descripci\u00f3n <code>Tipo</code> int Tipo de l\u00ednea del pedido. <code>Referencia</code> string Referencia \u00fanica de la l\u00ednea del pedido. <code>Cantidad</code> int Cantidad de unidades de la l\u00ednea del pedido. <code>Concepto</code> string Concepto o descripci\u00f3n de la l\u00ednea del pedido. <code>Precio</code> float Precio unitario de la l\u00ednea del pedido. <code>Base</code> float Monto base de la l\u00ednea del pedido antes de impuestos y descuentos. <code>SubTotal</code> float Subtotal de la l\u00ednea del pedido despu\u00e9s de aplicar descuentos. <code>PorcentajeDescuento</code> float Porcentaje de descuento aplicado a la l\u00ednea del pedido. <code>Descuento</code> float Monto total de descuentos aplicados a la l\u00ednea del pedido. <p>Responses: --&gt; (1) &lt;--</p> <ol> <li> Response:<pre><code>    - 200: Mensaje de \u00e9xito\n    - 400: Error al insertar el pedido\n</code></pre></li> </ol>"},{"location":"es/APIS/APIPedidos/#code-exe","title":"Code exe","text":"C#JavapythonJavaScriptRuby <pre><code>var json = JsonConvert.SerializeObject(JSONPEDIDO);\n\nvar options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/CrearPedido\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddJsonBody(json);\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>// Convertir JSONPEDIDO a formato JSON\nString json = new Gson().toJson(JSONPEDIDO);\n\n// Crear cliente HTTP\nHttpClient client = HttpClient.newHttpClient();\n\n// Crear solicitud POST\nHttpRequest request = HttpRequest.newBuilder()\n    .uri(URI.create(\"https://apis.metasync.com/Pedidos/CrearPedido\"))\n    .header(\"apiKey\", apiKey)\n    .header(\"idempresa\", String.valueOf(idempresa))\n    .header(\"accept\", \"application/json\")\n    .header(\"Content-Type\", \"application/json\")\n    .POST(HttpRequest.BodyPublishers.ofString(json))\n    .build();\n\n// Enviar solicitud y obtener respuesta\nHttpResponse&lt;String&gt; response = client.send(request, HttpResponse.BodyHandlers.ofString());\n\n// Devolver el contenido de la respuesta\nreturn response.body();\n</code></pre> <pre><code>json_data = json.dumps(JSONPEDIDO)\n\n# Configurar la URL base y la ruta del endpoint\nbase_url = \"https://apis.metasync.com\"\nendpoint = \"/Pedidos/CrearPedido\"\n\n# Configurar los encabezados de la solicitud\nheaders = {\n    \"apiKey\": apiKey,\n    \"idempresa\": str(idempresa),\n    \"accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\n\n# Realizar la solicitud POST\nresponse = requests.post(base_url + endpoint, headers=headers, json=json_data)\n</code></pre> <pre><code>// Convertir JSONPEDIDO a formato JSON\nlet json = JSON.stringify(JSONPEDIDO);\n\n// Configurar los encabezados de la solicitud\nlet headers = {\n    \"apiKey\": apiKey,\n    \"idempresa\": idempresa.toString(),\n    \"accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\n\n// Realizar la solicitud POST\nlet response = await fetch(\"https://apis.metasync.com/Pedidos/CrearPedido\", {\n    method: \"POST\",\n    headers: headers,\n    body: json\n});\n\n// Devolver el contenido de la respuesta\nreturn await response.text();\n</code></pre> <pre><code>    require 'net/http'\n    require 'uri'\n    require 'json'\n\n    # Convertir JSONPEDIDO a formato JSON\n    json = JSONPEDIDO.to_json\n\n    # Configurar la URL y los encabezados de la solicitud\n    uri = URI.parse(\"https://apis.metasync.com/Pedidos/CrearPedido\")\n    headers = {\n        'apiKey' =&gt; apiKey,\n        'idempresa' =&gt; idempresa.to_s,\n        'accept' =&gt; 'application/json',\n        'Content-Type' =&gt; 'application/json'\n    }\n\n    # Crear la solicitud POST\n    http = Net::HTTP.new(uri.host, uri.port)\n    request = Net::HTTP::Post.new(uri.request_uri, headers)\n    request.body = json\n\n    # Realizar la solicitud y obtener la respuesta\n    response = http.request(request)\n\n    # Devolver el contenido de la respuesta\n    return response.body\n</code></pre>"},{"location":"es/APIS/APIPedidos/#actualizarestado","title":"ActualizarEstado","text":"<p>Description</p> <p>El m\u00e9todo {ActualizarEstado} permite actualizar el estado de un pedido.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/ActualizarEstado</p> <p>Estados enum: (1)</p> <ol> <li> public enum Estado<pre><code>    {\n        Desconocido = 0,\n        EnSeguimiento = 1,\n        Reservado = 2,\n        Procesando = 3,\n        EnReparto = 4,\n        Entregado = 5,\n        Anulado = 6,\n        Devolucion = 7,\n        DevolucionParcial = 8\n    }\n</code></pre></li> </ol> <p>Par\u00e1metros de ActualizarEstado:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>codigo</code> Header (BPARTS_1281151_1022) Required string Codigo del pedido <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa. <code>estado</code> Header (0) Required string Num estado al que deseamos actualizar"},{"location":"es/APIS/APIPedidos/#code-exe_1","title":"Code exe","text":"C#javapythonjavascriptruby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ActualizarEstado\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"codigo\", codigo);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\nrequest.AddHeader(\"estado\", \"0\");\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>OkHttpClient client = new OkHttpClient();\n    RequestBody body = RequestBody.create(\"\", JSON); // No hay cuerpo en este caso\n    Request request = new Request.Builder()\n        .url(\"https://apis.metasync.com/Pedidos/ActualizarEstado\")\n        .addHeader(\"apiKey\", apiKey)\n        .addHeader(\"codigo\", codigo)\n        .addHeader(\"idempresa\", String.valueOf(idempresa))\n        .addHeader(\"estado\", \"0\")\n        .post(body)\n        .build();\n\n    // Enviar la solicitud POST\n    try (Response response = client.newCall(request).execute()) {\n        System.out.println(response.body().string());\n    }\n</code></pre> <pre><code>    # Configurar la solicitud\nurl = \"https://apis.metasync.com/Pedidos/ActualizarEstado\"\nheaders = {\n    \"apiKey\": apiKey,\n    \"codigo\": codigo,\n    \"idempresa\": str(idempresa),\n    \"estado\": \"0\"\n}\n\n# Enviar la solicitud POST\nresponse = requests.post(url, headers=headers)\n\n# Imprimir el contenido de la respuesta\nprint(response.content)\n</code></pre> <pre><code>const axios = require('axios');\n\nconst url = 'https://apis.metasync.com/Pedidos/ActualizarEstado';\nconst headers = {\n    'apiKey': apiKey,\n    'codigo': codigo,\n    'idempresa': idempresa.toString(),\n    'estado': '0'\n};\n\naxios.post(url, {}, { headers })\n    .then(response =&gt; {\n        console.log(response.data);\n    })\n    .catch(error =&gt; {\n        console.error('Error:', error);\n    });\n</code></pre> <pre><code>require 'net/http'\nrequire 'uri'\nrequire 'json'\n\nurl = URI(\"https://apis.metasync.com/Pedidos/ActualizarEstado\")\nheaders = {\n    'apiKey': apiKey,\n    'codigo': codigo,\n    'idempresa': idempresa.to_s,\n    'estado': '0'\n}\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Post.new(url)\nrequest['Content-Type'] = 'application/json'\nheaders.each { |key, value| request[key] = value }\n\nresponse = http.request(request)\nputs response.read_body\n</code></pre>"},{"location":"es/APIS/APIPedidos/#agregarseguimiento","title":"AgregarSeguimiento","text":"<p>Description</p> <p>El m\u00e9todo {AgregarSeguimiento} permite agregar seguimiento a un pedido.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/AgregarSeguimiento</p> <p>Par\u00e1metros de AgregarSeguimiento:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>codigo</code> Header (3423423) Required int32 Codigo del pedido <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa. <code>url</code> Header (https://.../view_order/1405978) Required string Introducir url seguimiento"},{"location":"es/APIS/APIPedidos/#code-exe_2","title":"Code exe","text":"C#javapythonjavascriptRuby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/AgregarSeguimiento\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"codigo\", codigo);\nrequest.AddHeader(\"url\", url);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    String apiKey = \"your_api_key\";\n    String codigo = \"your_codigo\";\n    String url = \"your_url\";\n    int idempresa = your_idempresa;\n\n    CloseableHttpClient client = HttpClients.createDefault();\n    HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/AgregarSeguimiento\");\n    httpPost.addHeader(\"apiKey\", apiKey);\n    httpPost.addHeader(\"codigo\", codigo);\n    httpPost.addHeader(\"url\", url);\n    httpPost.addHeader(\"idempresa\", String.valueOf(idempresa));\n\n    CloseableHttpResponse response = client.execute(httpPost);\n\n    System.out.println(response.getEntity().getContent());\n\n    client.close();\n</code></pre> <pre><code>    import requests\n\n    def agregar_seguimiento(api_key, codigo, url, idempresa):\n        url = \"https://apis.metasync.com/Pedidos/AgregarSeguimiento\"\n        headers = {\"apiKey\": api_key, \"codigo\": codigo, \"url\": url, \"idempresa\": str(idempresa)}\n        response = requests.post(url, headers=headers)\n        return response.text\n\n    # Uso del m\u00e9todo\n    api_key = \"your_api_key\"\n    codigo = \"your_codigo\"\n    url = \"your_url\"\n    idempresa = your_idempresa\n    response_content = agregar_seguimiento(api_key, codigo, url, idempresa)\n    print(response_content)\n</code></pre> <pre><code>const fetch = require('node-fetch');\n\nasync function agregarSeguimiento(apiKey, codigo, url, idempresa) {\n    const url = \"https://apis.metasync.com/Pedidos/AgregarSeguimiento\";\n    const options = {\n        method: 'POST',\n        headers: {\n            'apiKey': apiKey,\n            'codigo': codigo,\n            'url': url,\n            'idempresa': idempresa.toString()\n        }\n    };\n    const response = await fetch(url, options);\n    return await response.text();\n}\n\n// Uso de la funci\u00f3n\nconst apiKey = \"your_api_key\";\nconst codigo = \"your_codigo\";\nconst url = \"your_url\";\nconst idempresa = your_idempresa;\nagregarSeguimiento(apiKey, codigo, url, idempresa)\n    .then(responseContent =&gt; console.log(responseContent))\n    .catch(error =&gt; console.error('Error:', error));\n</code></pre> <pre><code>    require 'net/http'\n\n    def agregar_seguimiento(api_key, codigo, url, idempresa)\n    url = URI(\"https://apis.metasync.com/Pedidos/AgregarSeguimiento\")\n    http = Net::HTTP.new(url.host, url.port)\n    http.use_ssl = true\n\n    request = Net::HTTP::Post.new(url)\n    request[\"apiKey\"] = api_key\n    request[\"codigo\"] = codigo\n    request[\"url\"] = url\n    request[\"idempresa\"] = idempresa.to_s\n\n    response = http.request(request)\n    return response.body\n    end\n\n    # Uso del m\u00e9todo\n    api_key = \"your_api_key\"\n    codigo = \"your_codigo\"\n    url = \"your_url\"\n    idempresa = your_idempresa\n    response_content = agregar_seguimiento(api_key, codigo, url, idempresa)\n    puts response_content\n</code></pre>"},{"location":"es/APIS/APIPedidos/#anularpedido","title":"AnularPedido","text":"<p>Description</p> <p>El m\u00e9todo {AnularPedido} permite cancelar un pedido a trav\u00e9s de su c\u00f3digo.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/AnularPedido</p> <p>Par\u00e1metros de AnularPedido:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>codigo</code> Header (RV-6C7QT17C) Required int32 Codigo del pedido <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa."},{"location":"es/APIS/APIPedidos/#code-exe_3","title":"Code exe","text":"C#javapythonjavascriptruby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/AnularPedido\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"codigo\", codigo);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        String apiKey = \"your_api_key\";\n        String codigo = \"your_codigo\";\n        int idempresa = your_idempresa;\n\n        CloseableHttpClient client = HttpClients.createDefault();\n        HttpPost httpPost = new HttpPost(\"https://apis.metasync.com/Pedidos/AnularPedido\");\n        httpPost.addHeader(\"apiKey\", apiKey);\n        httpPost.addHeader(\"codigo\", codigo);\n        httpPost.addHeader(\"idempresa\", String.valueOf(idempresa));\n\n        CloseableHttpResponse response = client.execute(httpPost);\n\n        System.out.println(response.getEntity().getContent());\n\n        client.close();\n    }\n}\n</code></pre> <pre><code>    import requests\n\n    def anular_pedido(api_key, codigo, idempresa):\n        url = \"https://apis.metasync.com/Pedidos/AnularPedido\"\n        headers = {\"apiKey\": api_key, \"codigo\": codigo, \"idempresa\": str(idempresa)}\n        response = requests.post(url, headers=headers)\n        return response.text\n\n    # Uso del m\u00e9todo\n    api_key = \"your_api_key\"\n    codigo = \"your_codigo\"\n    idempresa = your_idempresa\n    response_content = anular_pedido(api_key, codigo, idempresa)\n    print(response_content)\n</code></pre> <pre><code>const fetch = require('node-fetch');\n\nasync function anularPedido(apiKey, codigo, idempresa) {\n    const url = \"https://apis.metasync.com/Pedidos/AnularPedido\";\n    const options = {\n        method: 'POST',\n        headers: {\n            'apiKey': apiKey,\n            'codigo': codigo,\n            'idempresa': idempresa.toString()\n        }\n    };\n    const response = await fetch(url, options);\n    return await response.text();\n}\n\n// Uso de la funci\u00f3n\nconst apiKey = \"your_api_key\";\nconst codigo = \"your_codigo\";\nconst idempresa = your_idempresa;\nanularPedido(apiKey, codigo, idempresa)\n    .then(responseContent =&gt; console.log(responseContent))\n    .catch(error =&gt; console.error('Error:', error));\n</code></pre> <pre><code>require 'net/http'\n\ndef anular_pedido(api_key, codigo, idempresa)\nurl = URI(\"https://apis.metasync.com/Pedidos/AnularPedido\")\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiKey\"] = api_key\nrequest[\"codigo\"] = codigo\nrequest[\"idempresa\"] = idempresa.to_s\n\nresponse = http.request(request)\nreturn response.body\nend\n\n# Uso del m\u00e9todo\napi_key = \"your_api_key\"\ncodigo = \"your_codigo\"\nidempresa = your_idempresa\nresponse_content = anular_pedido(api_key, codigo, idempresa)\nputs response_content\n</code></pre>"},{"location":"es/APIS/APIPedidos/#recuperarpedidoorigen","title":"RecuperarPedidoOrigen","text":"<p>Description</p> <p>El m\u00e9todo {RecuperarPedidoOrigen} permite agregar seguimiento a un pedido.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/RecuperarPedidoOrigen</p> <p>Par\u00e1metros de RecuperarPedidoOrigen:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>codigo</code> Header (3423423) Required int32 Codigo del pedido <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa."},{"location":"es/APIS/APIPedidos/#code-exe_4","title":"Code exe","text":"C#javapythonjavascriptruby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/RecuperarPedidoOrigen\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>import okhttp3.*;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        OkHttpClient client = new OkHttpClient();\n\n        RequestBody body = new FormBody.Builder()\n                .add(\"idempresa\", String.valueOf(idempresa))\n                .build();\n\n        Request request = new Request.Builder()\n                .url(\"https://apis.metasync.com/Pedidos/RecuperarPedidoOrigen\")\n                .post(body)\n                .addHeader(\"apiKey\", apiKey)\n                .build();\n\n        try (Response response = client.newCall(request).execute()) {\n            System.out.println(response.body().string());\n        }\n    }\n}\n</code></pre> <pre><code>    import requests\n    url = \"https://apis.metasync.com/Pedidos/RecuperarPedidoOrigen\"\n    headers = {\n        \"apiKey\": apiKey,\n        \"idempresa\": str(idempresa)\n    }\nresponse = requests.post(url, headers=headers)\nprint(response.text)\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\n    async function recuperarPedidoOrigen() {\n        const url = 'https://apis.metasync.com/Pedidos/RecuperarPedidoOrigen';\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'apiKey': apiKey,\n                'idempresa': idempresa.toString()\n            }\n        };\n\n        const response = await fetch(url, options);\n        const data = await response.json();\n        console.log(data);\n    }\n</code></pre> <pre><code>    require 'net/http'\n    require 'uri'\n\n    uri = URI.parse(\"https://apis.metasync.com/Pedidos/RecuperarPedidoOrigen\")\n    request = Net::HTTP::Post.new(uri)\n    request[\"apiKey\"] = apiKey\n    request[\"idempresa\"] = idempresa.to_s\n\n    response = Net::HTTP.start(uri.hostname, uri.port, use_ssl: uri.scheme == \"https\") do |http|\n    http.request(request)\n    end\n\n    puts response.body\n</code></pre>"},{"location":"es/APIS/APIPedidos/#obtenerseguimiento","title":"ObtenerSeguimiento","text":"<p>Description</p> <p>El m\u00e9todo {ObtenerSeguimiento} permite agregar seguimiento a un pedido.</p> <p>Info</p> <p>Ruta: https://apis.metasync.com/Pedidos/ObtenerSeguimiento</p> <p>Par\u00e1metros de ObtenerSeguimiento:</p> Nombre Tipo Parametro exeemplo Tipo Descripci\u00f3n <code>codigo</code> Header (3423423) Required int32 Codigo del pedido <code>apikey</code> Header (MS-5iq5RTxT6EW1BBqTHmGjdK6ZwhQ7C7v9S) Required string Apikey Canal <code>idempresa</code> Header (1460) Required int32 Identificador local de la empresa."},{"location":"es/APIS/APIPedidos/#code-exe_5","title":"Code exe","text":"C#javapythonjavascriptruby <pre><code>var options = new RestClientOptions(\"https://apis.metasync.com\");\nvar client = new RestClient(options);\nvar request = new RestRequest(\"/Pedidos/ObtenerSeguimiento\");\nrequest.AddHeader(\"apiKey\", apiKey);\nrequest.AddHeader(\"codigo\", codigo);\nrequest.AddHeader(\"idempresa\", idempresa.ToString());\n\nvar response = await client.PostAsync(request);\n\nreturn response.Content;\n</code></pre> <pre><code>    OkHttpClient client = new OkHttpClient();\n\n    RequestBody body = new FormBody.Builder()\n            .add(\"codigo\", codigo)\n            .add(\"idempresa\", String.valueOf(idempresa))\n            .build();\n\n    Request request = new Request.Builder()\n            .url(\"https://apis.metasync.com/Pedidos/ObtenerSeguimiento\")\n            .post(body)\n            .addHeader(\"apiKey\", apiKey)\n            .build();\n\n    try (Response response = client.newCall(request).execute()) {\n        System.out.println(response.body().string());\n    }\n</code></pre> <pre><code>    import requests\n    url = \"https://apis.metasync.com/Pedidos/ObtenerSeguimiento\"\n    headers = {\n        \"apiKey\": apiKey,\n        \"codigo\": codigo,\n        \"idempresa\": str(idempresa)\n    }\n    response = requests.post(url, headers=headers)\n    print(response.text)\n</code></pre> <pre><code>    const fetch = require('node-fetch');\n\nasync function obtenerSeguimiento() {\n    const url = 'https://apis.metasync.com/Pedidos/ObtenerSeguimiento';\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'apiKey': apiKey,\n            'codigo': codigo,\n            'idempresa': idempresa.toString()\n        }\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n    console.log(data);\n    }\n</code></pre> <pre><code>require 'net/http'\nrequire 'uri'\n\nuri = URI.parse(\"https://apis.metasync.com/Pedidos/ObtenerSeguimiento\")\nrequest = Net::HTTP::Post.new(uri)\nrequest[\"apiKey\"] = apiKey\nrequest[\"codigo\"] = codigo\nrequest[\"idempresa\"] = idempresa.to_s\n\nresponse = Net::HTTP.start(uri.hostname, uri.port, use_ssl: uri.scheme == \"https\") do |http|\nhttp.request(request)\nend\n\nputs response.body\n</code></pre>"},{"location":"es/APIS/TRY/","title":"TRY","text":"<p>Usage</p> <p>Para poder usar las apis tendr\u00e1s que:</p> <p>1 - Abrir este archivo</p> <p>2 - Click derecho en el json y guardar como</p> <p></p> <p>3 - En collections pulsaremos sobre Importar</p> <p></p> <p>3.1 A continuaci\u00f3n seleccionaremos el archivo descargado anteriormente</p> <p></p> <p>3.2 Le daremos a importar y ya podremos trabajar con las APIS y sus m\u00e9todos</p> <p></p> <p>4 - Importarlo y empezar a trabajar con las apis.</p> <p></p>"}]}